{"version":3,"file":"hibp.module.js","sources":["../../src/api/fetch-polyfill.ts","../../src/api/haveibeenpwned/responses.ts","../../src/api/haveibeenpwned/fetch-from-api.ts","../../src/breach.ts","../../src/breached-account.ts","../../src/breaches.ts","../../src/data-classes.ts","../../src/paste-account.ts","../../node_modules/jssha/dist/sha1.mjs","../../src/api/pwnedpasswords/responses.ts","../../src/pwned-password-range.ts","../../src/api/pwnedpasswords/fetch-from-api.ts","../../src/pwned-password.ts","../../src/search.ts","../../src/subscription-status.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-require-imports */\n\n// This can probably be removed in favor of Node's native fetch once we drop\n// support for v18. https://x.com/ebey_jacob/status/1709975146939973909?s=20\n\nexport function installUndiciOnNode18() {\n  /* c8 ignore start */\n  if (typeof process !== 'undefined' && process.versions?.node?.startsWith('18.')) {\n    const {\n      File: UndiciFile,\n      fetch: undiciFetch,\n      FormData: UndiciFormData,\n      Headers: UndiciHeaders,\n      Request: UndiciRequest,\n      Response: UndiciResponse,\n    } = require('undici');\n    global.File = UndiciFile as unknown as typeof File;\n    global.Headers = UndiciHeaders;\n    global.Request = UndiciRequest;\n    global.Response = UndiciResponse;\n    global.fetch = undiciFetch;\n    global.FormData = UndiciFormData;\n  }\n  /* c8 ignore stop */\n}\n","/**\n * Known potential responses from the remote API.\n *\n * Unfortunately, the API does not send a decent human-readable message back with each response, but\n * they are documented on the website: https://haveibeenpwned.com/api/v3#ResponseCodes\n *\n * These objects simply provide a mapping between the HTTP response status code and the\n * corresponding human-readable message so we can throw a more descriptive error for the consumer.\n * (They are also leveraged in our tests.)\n */\n\n/** @internal */\nexport const BAD_REQUEST = {\n  status: 400 as const,\n  statusText: 'Bad request â€” the account does not comply with an acceptable format.',\n};\n\n/**\n * The API includes a human-readable error message as text in the body of this\n * response type. Manually populating the message here purely for use in tests.\n *\n * @internal\n */\nexport const UNAUTHORIZED = {\n  status: 401 as const,\n  body: `Your request to the API couldn't be authorised. Check you have the right value in the \"hibp-api-key\" header, refer to the documentation for more: https://haveibeenpwned.com/API/v3#Authorisation`,\n};\n\n/** @internal */\nexport const FORBIDDEN = {\n  status: 403 as const,\n  statusText: 'Forbidden - access denied.',\n};\n\n/** @internal */\nexport const BLOCKED = {\n  headers: new Map([['cf-ray', 'someRayId']]),\n  status: 403 as const,\n};\n\n/** @internal */\nexport const NOT_FOUND = {\n  status: 404 as const,\n};\n\n/**\n * The API includes a JSON object containing a human-readable message in the\n * body of this response type. Manually populating the message here purely for\n * use in tests.\n *\n * @internal\n */\nexport const TOO_MANY_REQUESTS = {\n  headers: new Map([['retry-after', '2']]),\n  status: 429 as const,\n  body: {\n    statusCode: 429 as const,\n    message: 'Rate limit is exceeded. Try again in 2 seconds.',\n  },\n};\n","import type { PackageJson } from 'type-fest';\nimport { installUndiciOnNode18 } from '../fetch-polyfill.js';\nimport { BAD_REQUEST, UNAUTHORIZED, FORBIDDEN, NOT_FOUND, TOO_MANY_REQUESTS } from './responses.js';\nimport type { ApiData, ErrorData } from './types.js';\n\ninstallUndiciOnNode18();\n\n/**\n * Custom error thrown when the haveibeenpwned.com API responds with 429 Too\n * Many Requests. See the `retryAfterSeconds` property for the number of seconds\n * to wait before attempting the request again.\n *\n * @see https://haveibeenpwned.com/API/v3#RateLimiting\n */\nexport class RateLimitError extends Error {\n  /**\n   * The number of seconds to wait before attempting the request again. May be\n   * `undefined` if the API does not provide a `retry-after` header, but this\n   * should never happen.\n   */\n  public retryAfterSeconds: number | undefined;\n\n  constructor(\n    retryAfter: ReturnType<Headers['get']>,\n    message: string | undefined,\n    options?: ErrorOptions,\n  ) {\n    super(message, options);\n    this.name = this.constructor.name;\n    this.retryAfterSeconds =\n      typeof retryAfter === 'string'\n        ? Number.parseInt(retryAfter, 10) /* c8 ignore start */\n        : undefined; /* c8 ignore stop */\n  }\n}\n\nfunction blockedWithRayId(rayId: string) {\n  return `Request blocked, contact haveibeenpwned.com if this continues (Ray ID: ${rayId})`;\n}\n\n/**\n * Fetches data from the supplied API endpoint.\n *\n * HTTP status code 200 returns an Object (data found).\n * HTTP status code 404 returns null (no data found).\n * HTTP status code 400 throws an Error (bad request).\n * HTTP status code 401 throws an Error (unauthorized).\n * HTTP status code 403 throws an Error (forbidden).\n * HTTP status code 429 throws an Error (too many requests).\n *\n * @internal\n * @private\n * @param {string} endpoint the API endpoint to query\n * @param {object} [options] a configuration object\n * @param {string} [options.apiKey] an API key from\n * https://haveibeenpwned.com/API/Key\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {number} [options.timeoutMs] timeout for the request in milliseconds\n * (default: none)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {Promise<ApiData>} a Promise which resolves to the data resulting\n * from the query (or null for 404 Not Found responses), or rejects with an\n * Error\n */\nexport async function fetchFromApi(\n  endpoint: string,\n  options: {\n    apiKey?: string;\n    baseUrl?: string;\n    timeoutMs?: number;\n    userAgent?: string;\n  } = {},\n): Promise<ApiData> {\n  const { apiKey, baseUrl = 'https://haveibeenpwned.com/api/v3', timeoutMs, userAgent } = options;\n  const headers: Record<string, string> = {};\n\n  if (apiKey) {\n    headers['HIBP-API-Key'] = apiKey;\n  }\n\n  if (userAgent) {\n    headers['User-Agent'] = userAgent;\n  }\n\n  // Provide a default User-Agent when running outside the browser\n  if (!userAgent && typeof navigator === 'undefined') {\n    const { name, version } = (await import('../../../package.json', {\n      assert: { type: 'json' },\n    })) as unknown as PackageJson;\n    headers['User-Agent'] = `${name} ${version}`;\n  }\n\n  const config: RequestInit = {\n    headers,\n    ...(timeoutMs ? { signal: AbortSignal.timeout(timeoutMs) } : {}),\n  };\n  const url = `${baseUrl.replace(/\\/$/g, '')}${endpoint}`;\n  const response = await fetch(url, config);\n\n  if (response.ok) return response.json() as Promise<ApiData>;\n\n  switch (response.status) {\n    case BAD_REQUEST.status: {\n      throw new Error(BAD_REQUEST.statusText);\n    }\n    case UNAUTHORIZED.status: {\n      const message = await response.text();\n      throw new Error(message);\n    }\n    case FORBIDDEN.status: {\n      const rayId = response.headers.get('cf-ray');\n      if (rayId) throw new Error(blockedWithRayId(rayId));\n      throw new Error(FORBIDDEN.statusText);\n    }\n    case NOT_FOUND.status: {\n      return null;\n    }\n    case TOO_MANY_REQUESTS.status: {\n      const body = (await response.json()) as unknown as ErrorData;\n      const retryAfter = response.headers.get('retry-after');\n      throw new RateLimitError(retryAfter, body.message);\n    }\n    default: {\n      throw new Error(response.statusText);\n    }\n  }\n}\n","import type { Breach } from './api/haveibeenpwned/types.js';\nimport { fetchFromApi } from './api/haveibeenpwned/fetch-from-api.js';\n\n/**\n * An object representing a breach.\n *\n * @typedef {object} Breach\n * @property {string} Name\n * @property {string} Title\n * @property {string} Domain\n * @property {string} BreachDate\n * @property {string} AddedDate\n * @property {string} ModifiedDate\n * @property {number} PwnCount\n * @property {string} Description\n * @property {string[]} DataClasses\n * @property {boolean} IsVerified\n * @property {boolean} IsFabricated\n * @property {boolean} IsSensitive\n * @property {boolean} IsRetired\n * @property {boolean} IsSpamList\n * @property {boolean} IsMalware\n * @property {boolean} IsSubscriptionFree\n * @property {string} LogoPath\n */\n\n/**\n * Fetches data for a specific breach event.\n *\n * @param {string} breachName the name of a breach in the system\n * @param {object} [options] a configuration object\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {number} [options.timeoutMs] timeout for the request in milliseconds\n * (default: none)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {(Promise<Breach>|Promise<null>)} a Promise which resolves to an\n * object representing a breach (or null if no breach was found), or rejects\n * with an Error\n * @example\n * try {\n *   const data = await breach(\"Adobe\");\n *   if (data) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n */\nexport function breach(\n  breachName: string,\n  options: {\n    /**\n     * a custom base URL for the haveibeenpwned.com API endpoints (default:\n     * `https://haveibeenpwned.com/api/v3`)\n     */\n    baseUrl?: string;\n    /**\n     * timeout for the request in milliseconds (default: none)\n     */\n    timeoutMs?: number;\n    /**\n     * a custom string to send as the User-Agent field in the request headers\n     * (default: `hibp <version>`)\n     */\n    userAgent?: string;\n  } = {},\n): Promise<Breach | null> {\n  return fetchFromApi(\n    `/breach/${encodeURIComponent(breachName)}`,\n    options,\n  ) as Promise<Breach | null>;\n}\n","import type { Breach } from './api/haveibeenpwned/types.js';\nimport { fetchFromApi } from './api/haveibeenpwned/fetch-from-api.js';\n\n/**\n * Fetches breach data for a specific account.\n *\n * ðŸ”‘ `haveibeenpwned.com` requires an API key from\n * https://haveibeenpwned.com/API/Key for the `breachedaccount` endpoint. The\n * `apiKey` option here is not explicitly required, but direct requests made\n * without it will fail (unless you specify a `baseUrl` to a proxy that inserts\n * a valid API key on your behalf).\n *\n * @param {string} account a username or email address\n * @param {object} [options] a configuration object\n * @param {string} [options.apiKey] an API key from\n * https://haveibeenpwned.com/API/Key (default: undefined)\n * @param {string} [options.domain] a domain by which to filter the results\n * (default: all domains)\n * @param {boolean} [options.includeUnverified] include \"unverified\" breaches in\n * the results (default: true)\n * @param {number} [options.timeoutMs] timeout for the request in milliseconds\n * (default: none)\n * @param {boolean} [options.truncate] truncate the results to only include\n * the name of each breach (default: true)\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {(Promise<Breach[]> | Promise<null>)} a Promise which resolves to an\n * array of breach objects (or null if no breaches were found), or rejects with\n * an Error\n * @example\n * try {\n *   const data = await breachedAccount(\"foo\", { apiKey: \"my-api-key\" });\n *   if (data) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n * @example\n * try {\n *   const data = await breachedAccount(\"bar\", {\n *     includeUnverified: false,\n *     baseUrl: \"https://my-hibp-proxy:8080\",\n *   });\n *   if (data) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n * @example\n * try {\n *   const data = await breachedAccount(\"baz\", {\n *     apiKey: \"my-api-key\",\n *     domain: \"adobe.com\",\n *     truncate: false,\n *     userAgent: \"my-app 1.0\",\n *   });\n *   if (data) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n */\nexport function breachedAccount(\n  account: string,\n  options: {\n    /**\n     * an API key from https://haveibeenpwned.com/API/Key (default: undefined)\n     */\n    apiKey?: string;\n    /**\n     * a domain by which to filter the results (default: all domains)\n     */\n    domain?: string;\n    /**\n     * include \"unverified\" breaches in the results (default: true)\n     */\n    includeUnverified?: boolean;\n    /**\n     * timeout for the request in milliseconds (default: none)\n     */\n    timeoutMs?: number;\n    /**\n     * truncate the results to only include the name of each breach (default:\n     * true)\n     */\n    truncate?: boolean;\n    /**\n     * a custom base URL for the haveibeenpwned.com API endpoints (default:\n     * `https://haveibeenpwned.com/api/v3`)\n     */\n    baseUrl?: string;\n    /**\n     * a custom string to send as the User-Agent field in the request headers\n     * (default: `hibp <version>`)\n     */\n    userAgent?: string;\n  } = {},\n): Promise<Breach[] | null> {\n  const {\n    apiKey,\n    domain,\n    includeUnverified = true,\n    timeoutMs,\n    truncate = true,\n    baseUrl,\n    userAgent,\n  } = options;\n  const endpoint = `/breachedaccount/${encodeURIComponent(account)}?`;\n  const params: string[] = [];\n\n  if (domain) {\n    params.push(`domain=${encodeURIComponent(domain)}`);\n  }\n\n  if (!includeUnverified) {\n    params.push('includeUnverified=false');\n  }\n\n  if (!truncate) {\n    params.push('truncateResponse=false');\n  }\n\n  return fetchFromApi(`${endpoint}${params.join('&')}`, {\n    apiKey,\n    baseUrl,\n    timeoutMs,\n    userAgent,\n  }) as Promise<Breach[] | null>;\n}\n","import type { Breach } from './api/haveibeenpwned/types.js';\nimport { fetchFromApi } from './api/haveibeenpwned/fetch-from-api.js';\n\n/**\n * Fetches all breach events in the system.\n *\n * @param {object} [options] a configuration object\n * @param {string} [options.domain] a domain by which to filter the results\n * (default: all domains)\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {number} [options.timeoutMs] timeout for the request in milliseconds\n * (default: none)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {Promise<Breach[]>} a Promise which resolves to an array of breach\n * objects (an empty array if no breaches were found), or rejects with an Error\n * @example\n * try {\n *   const data = await breaches();\n *   if (data) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n * @example\n * try {\n *   const data = await breaches({ domain: \"adobe.com\" });\n *   if (data) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n */\nexport function breaches(\n  options: {\n    /**\n     * a domain by which to filter the results (default: all domains)\n     */\n    domain?: string;\n    /**\n     * a custom base URL for the haveibeenpwned.com API endpoints (default:\n     * `https://haveibeenpwned.com/api/v3`)\n     */\n    baseUrl?: string;\n    /**\n     * timeout for the request in milliseconds (default: none)\n     */\n    timeoutMs?: number;\n    /**\n     * a custom string to send as the User-Agent field in the request headers\n     * (default: `hibp <version>`)\n     */\n    userAgent?: string;\n  } = {},\n): Promise<Breach[]> {\n  const { domain, baseUrl, timeoutMs, userAgent } = options;\n  const endpoint = '/breaches?';\n  const params: string[] = [];\n\n  if (domain) {\n    params.push(`domain=${encodeURIComponent(domain)}`);\n  }\n\n  return fetchFromApi(`${endpoint}${params.join('&')}`, {\n    baseUrl,\n    timeoutMs,\n    userAgent,\n  }) as Promise<Breach[]>;\n}\n","import { fetchFromApi } from './api/haveibeenpwned/fetch-from-api.js';\n\n/**\n * Fetches all data classes in the system.\n *\n * @param {object} [options] a configuration object\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {number} [options.timeoutMs] timeout for the request in milliseconds\n * (default: none)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {(Promise<string[]> | Promise<null>)} a Promise which resolves to an\n * array of strings (or null if no data classes were found), or rejects with an\n * Error\n * @example\n * try {\n *   const data = await dataClasses();\n *   if (data) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n */\nexport function dataClasses(\n  options: {\n    /**\n     * a custom base URL for the haveibeenpwned.com API endpoints (default:\n     * `https://haveibeenpwned.com/api/v3`)\n     */\n    baseUrl?: string;\n    /**\n     * timeout for the request in milliseconds (default: none)\n     */\n    timeoutMs?: number;\n    /**\n     * a custom string to send as the User-Agent field in the request headers\n     * (default: `hibp <version>`)\n     */\n    userAgent?: string;\n  } = {},\n): Promise<string[] | null> {\n  return fetchFromApi('/dataclasses', options) as Promise<string[] | null>;\n}\n","import type { Paste } from './api/haveibeenpwned/types.js';\nimport { fetchFromApi } from './api/haveibeenpwned/fetch-from-api.js';\n\n/**\n * An object representing a paste.\n *\n * @typedef {object} Paste\n * @property {string} Id\n * @property {string} Source\n * @property {string} Title\n * @property {string} Date\n * @property {number} EmailCount\n */\n\n/**\n * Fetches paste data for a specific account (email address).\n *\n * ðŸ”‘ `haveibeenpwned.com` requires an API key from\n * https://haveibeenpwned.com/API/Key for the `pasteaccount` endpoint. The\n * `apiKey` option here is not explicitly required, but direct requests made\n * without it will fail (unless you specify a `baseUrl` to a proxy that inserts\n * a valid API key on your behalf).\n *\n * @param {string} email the email address to query\n * @param {object} [options] a configuration object\n * @param {string} [options.apiKey] an API key from\n * https://haveibeenpwned.com/API/Key (default: undefined)\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {number} [options.timeoutMs] timeout for the request in milliseconds\n * (default: none)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {(Promise<Paste[]> | Promise<null>)} a Promise which resolves to an\n * array of paste objects (or null if no pastes were found), or rejects with an\n * Error\n * @example\n * try {\n *   const data = await pasteAccount(\"foo@bar.com\", { apiKey: \"my-api-key\" });\n *   if (data) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n * @example\n * try {\n *   const data = await pasteAccount(\"foo@bar.com\", {\n *     baseUrl: \"https://my-hibp-proxy:8080\",\n *   });\n *   if (data) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n */\nexport function pasteAccount(\n  email: string,\n  options: {\n    /**\n     * an API key from https://haveibeenpwned.com/API/Key (default: undefined)\n     */\n    apiKey?: string;\n    /**\n     * a custom base URL for the haveibeenpwned.com API endpoints (default:\n     * `https://haveibeenpwned.com/api/v3`)\n     */\n    baseUrl?: string;\n    /**\n     * timeout for the request in milliseconds (default: none)\n     */\n    timeoutMs?: number;\n    /**\n     * a custom string to send as the User-Agent field in the request headers\n     * (default: `hibp <version>`)\n     */\n    userAgent?: string;\n  } = {},\n): Promise<Paste[] | null> {\n  return fetchFromApi(`/pasteaccount/${encodeURIComponent(email)}`, options) as Promise<\n    Paste[] | null\n  >;\n}\n","/**\n * A JavaScript implementation of the SHA family of hashes - defined in FIPS PUB 180-4, FIPS PUB 202,\n * and SP 800-185 - as well as the corresponding HMAC implementation as defined in FIPS PUB 198-1.\n *\n * Copyright 2008-2023 Brian Turek, 1998-2009 Paul Johnston & Contributors\n * Distributed under the BSD License\n * See http://caligatio.github.com/jsSHA/ for more information\n */\nconst t=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",r=\"ARRAYBUFFER not supported by this environment\",n=\"UINT8ARRAY not supported by this environment\";function i(t,r,n,i){let e,s,o;const h=r||[0],u=(n=n||0)>>>3,f=-1===i?3:0;for(e=0;e<t.length;e+=1)o=e+u,s=o>>>2,h.length<=s&&h.push(0),h[s]|=t[e]<<8*(f+i*(o%4));return{value:h,binLen:8*t.length+n}}function e(e,s,o){switch(s){case\"UTF8\":case\"UTF16BE\":case\"UTF16LE\":break;default:throw new Error(\"encoding must be UTF8, UTF16BE, or UTF16LE\")}switch(e){case\"HEX\":return function(t,r,n){return function(t,r,n,i){let e,s,o,h;if(0!=t.length%2)throw new Error(\"String of HEX type must be in byte increments\");const u=r||[0],f=(n=n||0)>>>3,c=-1===i?3:0;for(e=0;e<t.length;e+=2){if(s=parseInt(t.substr(e,2),16),isNaN(s))throw new Error(\"String of HEX type contains invalid characters\");for(h=(e>>>1)+f,o=h>>>2;u.length<=o;)u.push(0);u[o]|=s<<8*(c+i*(h%4))}return{value:u,binLen:4*t.length+n}}(t,r,n,o)};case\"TEXT\":return function(t,r,n){return function(t,r,n,i,e){let s,o,h,u,f,c,a,w,E=0;const l=n||[0],A=(i=i||0)>>>3;if(\"UTF8\"===r)for(a=-1===e?3:0,h=0;h<t.length;h+=1)for(s=t.charCodeAt(h),o=[],128>s?o.push(s):2048>s?(o.push(192|s>>>6),o.push(128|63&s)):55296>s||57344<=s?o.push(224|s>>>12,128|s>>>6&63,128|63&s):(h+=1,s=65536+((1023&s)<<10|1023&t.charCodeAt(h)),o.push(240|s>>>18,128|s>>>12&63,128|s>>>6&63,128|63&s)),u=0;u<o.length;u+=1){for(c=E+A,f=c>>>2;l.length<=f;)l.push(0);l[f]|=o[u]<<8*(a+e*(c%4)),E+=1}else for(a=-1===e?2:0,w=\"UTF16LE\"===r&&1!==e||\"UTF16LE\"!==r&&1===e,h=0;h<t.length;h+=1){for(s=t.charCodeAt(h),!0===w&&(u=255&s,s=u<<8|s>>>8),c=E+A,f=c>>>2;l.length<=f;)l.push(0);l[f]|=s<<8*(a+e*(c%4)),E+=2}return{value:l,binLen:8*E+i}}(t,s,r,n,o)};case\"B64\":return function(r,n,i){return function(r,n,i,e){let s,o,h,u,f,c,a,w=0;const E=n||[0],l=(i=i||0)>>>3,A=-1===e?3:0,p=r.indexOf(\"=\");if(-1===r.search(/^[a-zA-Z0-9=+/]+$/))throw new Error(\"Invalid character in base-64 string\");if(r=r.replace(/=/g,\"\"),-1!==p&&p<r.length)throw new Error(\"Invalid '=' found in base-64 string\");for(o=0;o<r.length;o+=4){for(f=r.substr(o,4),u=0,h=0;h<f.length;h+=1)s=t.indexOf(f.charAt(h)),u|=s<<18-6*h;for(h=0;h<f.length-1;h+=1){for(a=w+l,c=a>>>2;E.length<=c;)E.push(0);E[c]|=(u>>>16-8*h&255)<<8*(A+e*(a%4)),w+=1}}return{value:E,binLen:8*w+i}}(r,n,i,o)};case\"BYTES\":return function(t,r,n){return function(t,r,n,i){let e,s,o,h;const u=r||[0],f=(n=n||0)>>>3,c=-1===i?3:0;for(s=0;s<t.length;s+=1)e=t.charCodeAt(s),h=s+f,o=h>>>2,u.length<=o&&u.push(0),u[o]|=e<<8*(c+i*(h%4));return{value:u,binLen:8*t.length+n}}(t,r,n,o)};case\"ARRAYBUFFER\":try{new ArrayBuffer(0)}catch(t){throw new Error(r)}return function(t,r,n){return function(t,r,n,e){return i(new Uint8Array(t),r,n,e)}(t,r,n,o)};case\"UINT8ARRAY\":try{new Uint8Array(0)}catch(t){throw new Error(n)}return function(t,r,n){return i(t,r,n,o)};default:throw new Error(\"format must be HEX, TEXT, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY\")}}function s(i,e,s,o){switch(i){case\"HEX\":return function(t){return function(t,r,n,i){const e=\"0123456789abcdef\";let s,o,h=\"\";const u=r/8,f=-1===n?3:0;for(s=0;s<u;s+=1)o=t[s>>>2]>>>8*(f+n*(s%4)),h+=e.charAt(o>>>4&15)+e.charAt(15&o);return i.outputUpper?h.toUpperCase():h}(t,e,s,o)};case\"B64\":return function(r){return function(r,n,i,e){let s,o,h,u,f,c=\"\";const a=n/8,w=-1===i?3:0;for(s=0;s<a;s+=3)for(u=s+1<a?r[s+1>>>2]:0,f=s+2<a?r[s+2>>>2]:0,h=(r[s>>>2]>>>8*(w+i*(s%4))&255)<<16|(u>>>8*(w+i*((s+1)%4))&255)<<8|f>>>8*(w+i*((s+2)%4))&255,o=0;o<4;o+=1)c+=8*s+6*o<=n?t.charAt(h>>>6*(3-o)&63):e.b64Pad;return c}(r,e,s,o)};case\"BYTES\":return function(t){return function(t,r,n){let i,e,s=\"\";const o=r/8,h=-1===n?3:0;for(i=0;i<o;i+=1)e=t[i>>>2]>>>8*(h+n*(i%4))&255,s+=String.fromCharCode(e);return s}(t,e,s)};case\"ARRAYBUFFER\":try{new ArrayBuffer(0)}catch(t){throw new Error(r)}return function(t){return function(t,r,n){let i;const e=r/8,s=new ArrayBuffer(e),o=new Uint8Array(s),h=-1===n?3:0;for(i=0;i<e;i+=1)o[i]=t[i>>>2]>>>8*(h+n*(i%4))&255;return s}(t,e,s)};case\"UINT8ARRAY\":try{new Uint8Array(0)}catch(t){throw new Error(n)}return function(t){return function(t,r,n){let i;const e=r/8,s=-1===n?3:0,o=new Uint8Array(e);for(i=0;i<e;i+=1)o[i]=t[i>>>2]>>>8*(s+n*(i%4))&255;return o}(t,e,s)};default:throw new Error(\"format must be HEX, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY\")}}function o(t){const r={outputUpper:!1,b64Pad:\"=\",outputLen:-1},n=t||{},i=\"Output length must be a multiple of 8\";if(r.outputUpper=n.outputUpper||!1,n.b64Pad&&(r.b64Pad=n.b64Pad),n.outputLen){if(n.outputLen%8!=0)throw new Error(i);r.outputLen=n.outputLen}else if(n.shakeLen){if(n.shakeLen%8!=0)throw new Error(i);r.outputLen=n.shakeLen}if(\"boolean\"!=typeof r.outputUpper)throw new Error(\"Invalid outputUpper formatting option\");if(\"string\"!=typeof r.b64Pad)throw new Error(\"Invalid b64Pad formatting option\");return r}class h{constructor(t,r,n){const i=n||{};if(this.t=r,this.i=i.encoding||\"UTF8\",this.numRounds=i.numRounds||1,isNaN(this.numRounds)||this.numRounds!==parseInt(this.numRounds,10)||1>this.numRounds)throw new Error(\"numRounds must a integer >= 1\");this.o=t,this.h=[],this.u=0,this.l=!1,this.A=0,this.p=!1,this.U=[],this.R=[]}update(t){let r,n=0;const i=this.T>>>5,e=this.F(t,this.h,this.u),s=e.binLen,o=e.value,h=s>>>5;for(r=0;r<h;r+=i)n+this.T<=s&&(this.m=this.g(o.slice(r,r+i),this.m),n+=this.T);return this.A+=n,this.h=o.slice(n>>>5),this.u=s%this.T,this.l=!0,this}getHash(t,r){let n,i,e=this.B;const h=o(r);if(this.v){if(-1===h.outputLen)throw new Error(\"Output length must be specified in options\");e=h.outputLen}const u=s(t,e,this.H,h);if(this.p&&this.C)return u(this.C(h));for(i=this.Y(this.h.slice(),this.u,this.A,this.I(this.m),e),n=1;n<this.numRounds;n+=1)this.v&&e%32!=0&&(i[i.length-1]&=16777215>>>24-e%32),i=this.Y(i,e,0,this.L(this.o),e);return u(i)}setHMACKey(t,r,n){if(!this.M)throw new Error(\"Variant does not support HMAC\");if(this.l)throw new Error(\"Cannot set MAC key after calling update\");const i=e(r,(n||{}).encoding||\"UTF8\",this.H);this.N(i(t))}N(t){const r=this.T>>>3,n=r/4-1;let i;if(1!==this.numRounds)throw new Error(\"Cannot set numRounds with MAC\");if(this.p)throw new Error(\"MAC key already set\");for(r<t.binLen/8&&(t.value=this.Y(t.value,t.binLen,0,this.L(this.o),this.B));t.value.length<=n;)t.value.push(0);for(i=0;i<=n;i+=1)this.U[i]=909522486^t.value[i],this.R[i]=1549556828^t.value[i];this.m=this.g(this.U,this.m),this.A=this.T,this.p=!0}getHMAC(t,r){const n=o(r);return s(t,this.B,this.H,n)(this.S())}S(){let t;if(!this.p)throw new Error(\"Cannot call getHMAC without first setting MAC key\");const r=this.Y(this.h.slice(),this.u,this.A,this.I(this.m),this.B);return t=this.g(this.R,this.L(this.o)),t=this.Y(r,this.B,this.T,t,this.B),t}}function u(t,r){return t<<r|t>>>32-r}function f(t,r,n){return t^r^n}function c(t,r,n){return t&r^t&n^r&n}function a(t,r){const n=(65535&t)+(65535&r);return(65535&(t>>>16)+(r>>>16)+(n>>>16))<<16|65535&n}function w(t,r,n,i,e){const s=(65535&t)+(65535&r)+(65535&n)+(65535&i)+(65535&e);return(65535&(t>>>16)+(r>>>16)+(n>>>16)+(i>>>16)+(e>>>16)+(s>>>16))<<16|65535&s}function E(t){return[1732584193,4023233417,2562383102,271733878,3285377520]}function l(t,r){let n,i,e,s,o,h,E;const l=[];for(n=r[0],i=r[1],e=r[2],s=r[3],o=r[4],E=0;E<80;E+=1)l[E]=E<16?t[E]:u(l[E-3]^l[E-8]^l[E-14]^l[E-16],1),h=E<20?w(u(n,5),(A=i)&e^~A&s,o,1518500249,l[E]):E<40?w(u(n,5),f(i,e,s),o,1859775393,l[E]):E<60?w(u(n,5),c(i,e,s),o,2400959708,l[E]):w(u(n,5),f(i,e,s),o,3395469782,l[E]),o=s,s=e,e=u(i,30),i=n,n=h;var A;return r[0]=a(n,r[0]),r[1]=a(i,r[1]),r[2]=a(e,r[2]),r[3]=a(s,r[3]),r[4]=a(o,r[4]),r}function A(t,r,n,i){let e;const s=15+(r+65>>>9<<4),o=r+n;for(;t.length<=s;)t.push(0);for(t[r>>>5]|=128<<24-r%32,t[s]=4294967295&o,t[s-1]=o/4294967296|0,e=0;e<t.length;e+=16)i=l(t.slice(e,e+16),i);return i}class p extends h{constructor(t,r,n){if(\"SHA-1\"!==t)throw new Error(\"Chosen SHA variant is not supported\");super(t,r,n);const i=n||{};this.M=!0,this.C=this.S,this.H=-1,this.F=e(this.t,this.i,this.H),this.g=l,this.I=function(t){return t.slice()},this.L=E,this.Y=A,this.m=[1732584193,4023233417,2562383102,271733878,3285377520],this.T=512,this.B=160,this.v=!1,i.hmacKey&&this.N(function(t,r,n,i){const s=t+\" must include a value and format\";if(!r){if(!i)throw new Error(s);return i}if(void 0===r.value||!r.format)throw new Error(s);return e(r.format,r.encoding||\"UTF8\",n)(r.value)}(\"hmacKey\",i.hmacKey,this.H))}}export{p as default};\n","/**\n * Known potential responses from the remote API.\n *\n * https://haveibeenpwned.com/api/v3#PwnedPasswords\n *\n */\n\n/** @internal */\nexport const BAD_REQUEST = {\n  status: 400 as const,\n  body: 'The hash prefix was not in a valid format',\n};\n","import { fetchFromApi } from './api/pwnedpasswords/fetch-from-api.js';\n\nexport type PwnedPasswordSuffixes = Record<string, number>;\n\n/**\n * An object mapping an exposed password hash suffix (corresponding to a given\n * hash prefix) to how many times it occurred in the Pwned Passwords repository.\n *\n * @typedef {Object.<string, number>} PwnedPasswordSuffixes\n */\n\n/**\n * Fetches the SHA-1 or NTLM hash suffixes for the given 5-character hash\n * prefix.\n *\n * When a password hash with the same first 5 characters is found in the Pwned\n * Passwords repository, the API will respond with an HTTP 200 and include the\n * suffix of every hash beginning with the specified prefix, followed by a count\n * of how many times it appears in the data set. This function parses the\n * response and returns a more structured format.\n *\n * @param {string} prefix the first 5 characters of a password hash (case\n * insensitive)\n * @param {object} [options] a configuration object\n * @param {boolean} [options.addPadding] ask the remote API to add padding to\n * the response to obscure the password prefix (default: `false`)\n * @param {'sha1' | 'ntlm'} [options.mode] return SHA-1 or NTLM hashes\n * (default: `sha1`)\n * @param {string} [options.baseUrl] a custom base URL for the\n * pwnedpasswords.com API endpoints (default: `https://api.pwnedpasswords.com`)\n * @param {number} [options.timeoutMs] timeout for the request in milliseconds\n * (default: none)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {Promise<PwnedPasswordSuffixes>} a Promise which resolves to an\n * object mapping the `suffix` that when matched with the prefix composes the\n * complete hash, to the `count` of how many times it appears in the breached\n * password data set, or rejects with an Error\n *\n * @example\n * try {\n *   const results = await pwnedPasswordRange(\"5BAA6\");\n *   // results will have the following shape:\n *   // {\n *   //   \"003D68EB55068C33ACE09247EE4C639306B\": 3,\n *   //   \"012C192B2F16F82EA0EB9EF18D9D539B0DD\": 1,\n *   //   ...\n *   // }\n * } catch (err) {\n *   // ...\n * }\n * @example\n * try {\n *   const suffix = \"1E4C9B93F3F0682250B6CF8331B7EE68FD8\";\n *   const results = await pwnedPasswordRange(\"5BAA6\");\n *   const numPwns = results[suffix] || 0;\n * } catch (err) {\n *   // ...\n * }\n * @see https://haveibeenpwned.com/api/v3#SearchingPwnedPasswordsByRange\n */\nexport async function pwnedPasswordRange(\n  prefix: string,\n  options: {\n    /**\n     * ask the remote API to add padding to the response to obscure the password\n     * prefix (default: `false`)\n     */\n    addPadding?: boolean;\n    /**\n     * return SHA-1 or NTLM hashes (default: `sha1`)\n     */\n    mode?: 'sha1' | 'ntlm';\n    /**\n     * a custom base URL for the haveibeenpwned.com API endpoints (default:\n     * `https://haveibeenpwned.com/api/v3`)\n     */\n    baseUrl?: string;\n    /**\n     * timeout for the request in milliseconds (default: none)\n     */\n    timeoutMs?: number;\n    /**\n     * a custom string to send as the User-Agent field in the request headers\n     * (default: `hibp <version>`)\n     */\n    userAgent?: string;\n  } = {},\n): Promise<PwnedPasswordSuffixes> {\n  const { baseUrl, timeoutMs, userAgent, addPadding = false, mode = 'sha1' } = options;\n\n  const data = await fetchFromApi(`/range/${encodeURIComponent(prefix)}`, {\n    baseUrl,\n    timeoutMs,\n    userAgent,\n    addPadding,\n    mode,\n  });\n\n  // create array from lines of text in response body\n  const results = data.split('\\n').filter(Boolean);\n\n  // convert into an object mapping suffix to count for each line\n  return results.reduce<PwnedPasswordSuffixes>((acc, row) => {\n    const [suffix, countString] = row.split(':');\n    acc[suffix] = Number.parseInt(countString, 10);\n    return acc;\n  }, {});\n}\n","import { installUndiciOnNode18 } from '../fetch-polyfill.js';\nimport { BAD_REQUEST } from './responses.js';\n\ninstallUndiciOnNode18();\n\n/**\n * Fetches data from the supplied API endpoint.\n *\n * HTTP status code 200 returns plain text (data found).\n * HTTP status code 400 throws an Error (bad request).\n *\n * @internal\n * @private\n * @param {string} endpoint the API endpoint to query\n * @param {object} [options] a configuration object\n * @param {string} [options.baseUrl] a custom base URL for the\n * pwnedpasswords.com API endpoints (default: `https://api.pwnedpasswords.com`)\n * @param {number} [options.timeoutMs] timeout for the request in milliseconds\n * (default: none)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @param {boolean} [options.addPadding] ask the remote API to add padding to\n * the response to obscure the password prefix (default: `false`)\n * @param {'sha1' | 'ntlm'} [options.mode] return SHA-1 or NTLM hashes\n * (default: `sha1`)\n * @returns {Promise<string>} a Promise which resolves to the data resulting\n * from the query, or rejects with an Error\n */\nexport async function fetchFromApi(\n  endpoint: string,\n  options: {\n    baseUrl?: string;\n    timeoutMs?: number;\n    userAgent?: string;\n    addPadding?: boolean;\n    mode?: 'sha1' | 'ntlm';\n  } = {},\n): Promise<string> {\n  const {\n    baseUrl = 'https://api.pwnedpasswords.com',\n    timeoutMs,\n    userAgent,\n    addPadding = false,\n    mode = 'sha1',\n  } = options;\n\n  const config: RequestInit = {\n    headers: {\n      ...(userAgent ? { 'User-Agent': userAgent } : {}),\n      ...(addPadding ? { 'Add-Padding': 'true' } : {}),\n    },\n    ...(timeoutMs ? { signal: AbortSignal.timeout(timeoutMs) } : {}),\n  };\n  const url = `${baseUrl.replace(/\\/$/g, '')}${endpoint}?mode=${mode}`;\n  const response = await fetch(url, config);\n\n  if (response.ok) return response.text();\n\n  if (response.status === BAD_REQUEST.status) {\n    const text = await response.text();\n    throw new Error(text);\n  }\n\n  throw new Error(response.statusText);\n}\n","import JSSHA from 'jssha/dist/sha1';\nimport { pwnedPasswordRange } from './pwned-password-range.js';\n\n/**\n * Fetches the number of times the the given password has been exposed in a\n * breach (0 indicating no exposure). The password is given in plain text, but\n * only the first 5 characters of its SHA-1 hash will be submitted to the API.\n *\n * @param {string} password a password in plain text\n * @param {object} [options] a configuration object\n * @param {boolean} [options.addPadding] ask the remote API to add padding to\n * the response to obscure the password prefix (default: `false`)\n * @param {string} [options.baseUrl] a custom base URL for the\n * pwnedpasswords.com API endpoints (default: `https://api.pwnedpasswords.com`)\n * @param {number} [options.timeoutMs] timeout for the request in milliseconds\n * (default: none)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {Promise<number>} a Promise which resolves to the number of times\n * the password has been exposed in a breach, or rejects with an Error\n * @example\n * try {\n *   const numPwns = await pwnedPassword(\"f00b4r\");\n *   // truthy check or numeric condition\n *   if (numPwns) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n * @see https://haveibeenpwned.com/api/v3#PwnedPasswords\n */\nexport async function pwnedPassword(\n  password: string,\n  options: {\n    /**\n     * ask the remote API to add padding to the response to obscure the password\n     * prefix (default: `false`)\n     */\n    addPadding?: boolean;\n    /**\n     * a custom base URL for the haveibeenpwned.com API endpoints (default:\n     * `https://haveibeenpwned.com/api/v3`)\n     */\n    baseUrl?: string;\n    /**\n     * timeout for the request in milliseconds (default: none)\n     */\n    timeoutMs?: number;\n    /**\n     * a custom string to send as the User-Agent field in the request headers\n     * (default: `hibp <version>`)\n     */\n    userAgent?: string;\n  } = {},\n): Promise<number> {\n  // @ts-expect-error: JSSHA types are busted\n  const sha1 = new JSSHA('SHA-1', 'TEXT');\n  sha1.update(password);\n  const hash = sha1.getHash('HEX', { outputUpper: true });\n  const prefix = hash.slice(0, 5);\n  const suffix = hash.slice(5);\n\n  const range = await pwnedPasswordRange(prefix, options);\n  return range[suffix] || 0;\n}\n","import type { Breach, Paste } from './api/haveibeenpwned/types.js';\nimport { breachedAccount } from './breached-account.js';\nimport { pasteAccount } from './paste-account.js';\n\nexport interface SearchResults {\n  breaches: Breach[] | null;\n  pastes: Paste[] | null;\n}\n\n/**\n * An object representing search results.\n *\n * @typedef {object} SearchResults\n * @property {(Breach[] | null)} breaches\n * @property {(Paste[] | null)} pastes\n */\n\n/**\n * Fetches all breaches and all pastes associated with the provided account\n * (email address or username). Note that the remote API does not support\n * querying pastes by username (only email addresses), so in the event the\n * provided account is not a valid email address, only breach data is queried\n * and the \"pastes\" field of the resulting object will always be null. This is\n * exactly how searching via the current web interface behaves, which this\n * convenience method is designed to mimic.\n *\n * ðŸ”‘ `haveibeenpwned.com` requires an API key from\n * https://haveibeenpwned.com/API/Key for the `breachedaccount` and\n * `pasteaccount` endpoints. The `apiKey` option here is not explicitly\n * required, but direct requests made without it will fail (unless you specify a\n * `baseUrl` to a proxy that inserts a valid API key on your behalf).\n *\n * @param {string} account an email address or username\n * @param {object} [options] a configuration object\n * @param {string} [options.apiKey] an API key from\n * https://haveibeenpwned.com/API/Key (default: undefined)\n * @param {string} [options.domain] a domain by which to filter the breach\n * results (default: all domains)\n * @param {boolean} [options.truncate] truncate the breach results to only\n * include the name of each breach (default: true)\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {number} [options.timeoutMs] timeout for the request in milliseconds\n * (default: none)\n * @param {string} [options.userAgent] a custom string to send as the\n * User-Agent field in the request headers (default: `hibp <version>`)\n * @returns {Promise<SearchResults>} a Promise which resolves to an object\n * containing a \"breaches\" key (which can be null or an array of breach objects)\n * and a \"pastes\" key (which can be null or an array of paste objects), or\n * rejects with an Error\n * @example\n * try {\n *   const data = await search(\"foo\", { apiKey: \"my-api-key\" });\n *   if (data.breaches || data.pastes) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n * @example\n * try {\n *   const data = await search(\"nobody@nowhere.com\", {\n *     baseUrl: \"https://my-hibp-proxy:8080\",\n *     truncate: false,\n *   });\n *   if (data.breaches || data.pastes) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n * @see https://haveibeenpwned.com/\n */\nexport async function search(\n  account: string,\n  options: {\n    /**\n     * an API key from https://haveibeenpwned.com/API/Key (default: undefined)\n     */\n    apiKey?: string;\n    /**\n     * a domain by which to filter the results (default: all domains)\n     */\n    domain?: string;\n    /**\n     * truncate the results to only include the name of each breach (default:\n     * true)\n     */\n    truncate?: boolean;\n    /**\n     * a custom base URL for the haveibeenpwned.com API endpoints (default:\n     * `https://haveibeenpwned.com/api/v3`)\n     */\n    baseUrl?: string;\n    /**\n     * timeout for the request in milliseconds (default: none)\n     */\n    timeoutMs?: number;\n    /**\n     * a custom string to send as the User-Agent field in the request headers\n     * (default: `hibp <version>`)\n     */\n    userAgent?: string;\n  } = {},\n): Promise<SearchResults> {\n  const { apiKey, domain, truncate = true, baseUrl, timeoutMs, userAgent } = options;\n\n  const [breaches, pastes] = await Promise.all([\n    breachedAccount(account, {\n      apiKey,\n      domain,\n      truncate,\n      baseUrl,\n      timeoutMs,\n      userAgent,\n    }),\n    // This email regex is garbage but it seems to be what the API uses:\n    /^.+@.+$/.test(account)\n      ? pasteAccount(account, { apiKey, baseUrl, timeoutMs, userAgent })\n      : null,\n  ]);\n\n  return { breaches, pastes };\n}\n","import type { SubscriptionStatus } from './api/haveibeenpwned/types.js';\nimport { fetchFromApi } from './api/haveibeenpwned/fetch-from-api.js';\n\n/**\n * An object representing the status of your HIBP subscription.\n *\n * @typedef {object} SubscriptionStatus\n * @property {string} SubscriptionName\n * @property {string} Description\n * @property {string} SubscribedUntil\n * @property {number} Rpm\n * @property {number} DomainSearchMaxBreachedAccounts\n */\n\n/**\n * Fetches the current status of your HIBP subscription (API key).\n *\n * ðŸ”‘ `haveibeenpwned.com` requires an API key from\n * https://haveibeenpwned.com/API/Key for the `subscription/status` endpoint.\n * The `apiKey` option here is not explicitly required, but direct requests made\n * without it will fail (unless you specify a `baseUrl` to a proxy that inserts\n * a valid API key on your behalf).\n *\n * @param {object} [options] a configuration object\n * @param {string} [options.apiKey] an API key from\n * https://haveibeenpwned.com/API/Key (default: undefined)\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {number} [options.timeoutMs] timeout for the request in milliseconds\n * (default: none)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {Promise<SubscriptionStatus>} a Promise which resolves to a\n * subscription status object, or rejects with an Error\n * @example\n * try {\n *   const data = await subscriptionStatus({ apiKey: \"my-api-key\" });\n *   // ...\n * } catch (err) {\n *   // ...\n * }\n * @example\n * try {\n *   const data = await subscriptionStatus({\n *     baseUrl: \"https://my-hibp-proxy:8080\",\n *   });\n *   // ...\n * } catch (err) {\n *   // ...\n * }\n */\nexport async function subscriptionStatus(\n  options: {\n    /**\n     * an API key from https://haveibeenpwned.com/API/Key (default: undefined)\n     */\n    apiKey?: string;\n    /**\n     * a custom base URL for the haveibeenpwned.com API endpoints (default:\n     * `https://haveibeenpwned.com/api/v3`)\n     */\n    baseUrl?: string;\n    /**\n     * timeout for the request in milliseconds (default: none)\n     */\n    timeoutMs?: number;\n    /**\n     * a custom string to send as the User-Agent field in the request headers\n     * (default: `hibp <version>`)\n     */\n    userAgent?: string;\n  } = {},\n) {\n  const endpoint = '/subscription/status';\n\n  return fetchFromApi(endpoint, options) as Promise<SubscriptionStatus>;\n}\n"],"names":["installUndiciOnNode18","process","versions","node","startsWith","File","UndiciFile","fetch","undiciFetch","FormData","UndiciFormData","Headers","UndiciHeaders","Request","UndiciRequest","Response","UndiciResponse","require","global","BAD_REQUEST","status","statusText","UNAUTHORIZED","body","FORBIDDEN","NOT_FOUND","TOO_MANY_REQUESTS","headers","Map","statusCode","message","RateLimitError","Error","retryAfterSeconds","constructor","retryAfter","options","super","this","name","Number","parseInt","undefined","async","fetchFromApi","endpoint","apiKey","baseUrl","timeoutMs","userAgent","navigator","version","Promise","resolve","then","_package","config","signal","AbortSignal","timeout","url","replace","response","ok","json","text","rayId","get","blockedWithRayId","breach","breachName","encodeURIComponent","breachedAccount","account","domain","includeUnverified","truncate","params","push","join","breaches","dataClasses","pasteAccount","email","t","r","n","i","e","s","o","h","u","f","length","value","binLen","c","substr","isNaN","a","w","E","l","A","charCodeAt","p","indexOf","search","charAt","ArrayBuffer","Uint8Array","outputUpper","toUpperCase","b64Pad","String","fromCharCode","outputLen","shakeLen","encoding","numRounds","U","R","update","T","F","m","g","slice","getHash","B","v","H","C","Y","I","L","setHMACKey","M","N","getHMAC","S","hmacKey","format","pwnedPasswordRange","prefix","addPadding","mode","data","split","filter","Boolean","reduce","acc","row","suffix","countString","pwnedPassword","password","sha1","JSSHA","hash","pastes","all","test","subscriptionStatus"],"mappings":"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","x_google_ignoreList":[8]}