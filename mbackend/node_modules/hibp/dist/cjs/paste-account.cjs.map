{"version":3,"file":"paste-account.cjs","sources":["../../src/paste-account.ts"],"sourcesContent":["import type { Paste } from './api/haveibeenpwned/types.js';\nimport { fetchFromApi } from './api/haveibeenpwned/fetch-from-api.js';\n\n/**\n * An object representing a paste.\n *\n * @typedef {object} Paste\n * @property {string} Id\n * @property {string} Source\n * @property {string} Title\n * @property {string} Date\n * @property {number} EmailCount\n */\n\n/**\n * Fetches paste data for a specific account (email address).\n *\n * ðŸ”‘ `haveibeenpwned.com` requires an API key from\n * https://haveibeenpwned.com/API/Key for the `pasteaccount` endpoint. The\n * `apiKey` option here is not explicitly required, but direct requests made\n * without it will fail (unless you specify a `baseUrl` to a proxy that inserts\n * a valid API key on your behalf).\n *\n * @param {string} email the email address to query\n * @param {object} [options] a configuration object\n * @param {string} [options.apiKey] an API key from\n * https://haveibeenpwned.com/API/Key (default: undefined)\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {number} [options.timeoutMs] timeout for the request in milliseconds\n * (default: none)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {(Promise<Paste[]> | Promise<null>)} a Promise which resolves to an\n * array of paste objects (or null if no pastes were found), or rejects with an\n * Error\n * @example\n * try {\n *   const data = await pasteAccount(\"foo@bar.com\", { apiKey: \"my-api-key\" });\n *   if (data) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n * @example\n * try {\n *   const data = await pasteAccount(\"foo@bar.com\", {\n *     baseUrl: \"https://my-hibp-proxy:8080\",\n *   });\n *   if (data) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n */\nexport function pasteAccount(\n  email: string,\n  options: {\n    /**\n     * an API key from https://haveibeenpwned.com/API/Key (default: undefined)\n     */\n    apiKey?: string;\n    /**\n     * a custom base URL for the haveibeenpwned.com API endpoints (default:\n     * `https://haveibeenpwned.com/api/v3`)\n     */\n    baseUrl?: string;\n    /**\n     * timeout for the request in milliseconds (default: none)\n     */\n    timeoutMs?: number;\n    /**\n     * a custom string to send as the User-Agent field in the request headers\n     * (default: `hibp <version>`)\n     */\n    userAgent?: string;\n  } = {},\n): Promise<Paste[] | null> {\n  return fetchFromApi(`/pasteaccount/${encodeURIComponent(email)}`, options) as Promise<\n    Paste[] | null\n  >;\n}\n"],"names":["pasteAccount","email","options","fetchFromApi","encodeURIComponent"],"mappings":";;;;AAGA;;;;;;;;;AASG;AAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CG;SACaA,YAAYA,CAC1BC,KAAa,EACbC,UAmBI,EAAE,EAAA;EAEN,OAAOC,YAAAA,CAAAA,YAAY,CAAC,iBAAiBC,kBAAkB,CAACH,KAAK,CAAC,EAAE,EAAEC,OAAO,CAExE;AACH;"}