{"version":3,"file":"hibp.umd.js","sources":["../../src/api/fetch-polyfill.ts","../../src/breach.ts","../../src/breaches.ts","../../src/data-classes.ts","../../src/pwned-password-range.ts","../../src/pwned-password.ts","../../src/search.ts","../../src/subscription-status.ts","../../src/api/haveibeenpwned/responses.ts","../../src/api/haveibeenpwned/fetch-from-api.ts","../../src/breached-account.ts","../../src/paste-account.ts","../../node_modules/jssha/dist/sha1.mjs","../../src/api/pwnedpasswords/responses.ts","../../src/api/pwnedpasswords/fetch-from-api.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-require-imports */\n\n// This can probably be removed in favor of Node's native fetch once we drop\n// support for v18. https://x.com/ebey_jacob/status/1709975146939973909?s=20\n\nexport function installUndiciOnNode18() {\n  /* c8 ignore start */\n  if (typeof process !== 'undefined' && process.versions?.node?.startsWith('18.')) {\n    const {\n      File: UndiciFile,\n      fetch: undiciFetch,\n      FormData: UndiciFormData,\n      Headers: UndiciHeaders,\n      Request: UndiciRequest,\n      Response: UndiciResponse,\n    } = require('undici');\n    global.File = UndiciFile as unknown as typeof File;\n    global.Headers = UndiciHeaders;\n    global.Request = UndiciRequest;\n    global.Response = UndiciResponse;\n    global.fetch = undiciFetch;\n    global.FormData = UndiciFormData;\n  }\n  /* c8 ignore stop */\n}\n","import type { Breach } from './api/haveibeenpwned/types.js';\nimport { fetchFromApi } from './api/haveibeenpwned/fetch-from-api.js';\n\n/**\n * An object representing a breach.\n *\n * @typedef {object} Breach\n * @property {string} Name\n * @property {string} Title\n * @property {string} Domain\n * @property {string} BreachDate\n * @property {string} AddedDate\n * @property {string} ModifiedDate\n * @property {number} PwnCount\n * @property {string} Description\n * @property {string[]} DataClasses\n * @property {boolean} IsVerified\n * @property {boolean} IsFabricated\n * @property {boolean} IsSensitive\n * @property {boolean} IsRetired\n * @property {boolean} IsSpamList\n * @property {boolean} IsMalware\n * @property {boolean} IsSubscriptionFree\n * @property {string} LogoPath\n */\n\n/**\n * Fetches data for a specific breach event.\n *\n * @param {string} breachName the name of a breach in the system\n * @param {object} [options] a configuration object\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {number} [options.timeoutMs] timeout for the request in milliseconds\n * (default: none)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {(Promise<Breach>|Promise<null>)} a Promise which resolves to an\n * object representing a breach (or null if no breach was found), or rejects\n * with an Error\n * @example\n * try {\n *   const data = await breach(\"Adobe\");\n *   if (data) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n */\nexport function breach(\n  breachName: string,\n  options: {\n    /**\n     * a custom base URL for the haveibeenpwned.com API endpoints (default:\n     * `https://haveibeenpwned.com/api/v3`)\n     */\n    baseUrl?: string;\n    /**\n     * timeout for the request in milliseconds (default: none)\n     */\n    timeoutMs?: number;\n    /**\n     * a custom string to send as the User-Agent field in the request headers\n     * (default: `hibp <version>`)\n     */\n    userAgent?: string;\n  } = {},\n): Promise<Breach | null> {\n  return fetchFromApi(\n    `/breach/${encodeURIComponent(breachName)}`,\n    options,\n  ) as Promise<Breach | null>;\n}\n","import type { Breach } from './api/haveibeenpwned/types.js';\nimport { fetchFromApi } from './api/haveibeenpwned/fetch-from-api.js';\n\n/**\n * Fetches all breach events in the system.\n *\n * @param {object} [options] a configuration object\n * @param {string} [options.domain] a domain by which to filter the results\n * (default: all domains)\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {number} [options.timeoutMs] timeout for the request in milliseconds\n * (default: none)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {Promise<Breach[]>} a Promise which resolves to an array of breach\n * objects (an empty array if no breaches were found), or rejects with an Error\n * @example\n * try {\n *   const data = await breaches();\n *   if (data) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n * @example\n * try {\n *   const data = await breaches({ domain: \"adobe.com\" });\n *   if (data) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n */\nexport function breaches(\n  options: {\n    /**\n     * a domain by which to filter the results (default: all domains)\n     */\n    domain?: string;\n    /**\n     * a custom base URL for the haveibeenpwned.com API endpoints (default:\n     * `https://haveibeenpwned.com/api/v3`)\n     */\n    baseUrl?: string;\n    /**\n     * timeout for the request in milliseconds (default: none)\n     */\n    timeoutMs?: number;\n    /**\n     * a custom string to send as the User-Agent field in the request headers\n     * (default: `hibp <version>`)\n     */\n    userAgent?: string;\n  } = {},\n): Promise<Breach[]> {\n  const { domain, baseUrl, timeoutMs, userAgent } = options;\n  const endpoint = '/breaches?';\n  const params: string[] = [];\n\n  if (domain) {\n    params.push(`domain=${encodeURIComponent(domain)}`);\n  }\n\n  return fetchFromApi(`${endpoint}${params.join('&')}`, {\n    baseUrl,\n    timeoutMs,\n    userAgent,\n  }) as Promise<Breach[]>;\n}\n","import { fetchFromApi } from './api/haveibeenpwned/fetch-from-api.js';\n\n/**\n * Fetches all data classes in the system.\n *\n * @param {object} [options] a configuration object\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {number} [options.timeoutMs] timeout for the request in milliseconds\n * (default: none)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {(Promise<string[]> | Promise<null>)} a Promise which resolves to an\n * array of strings (or null if no data classes were found), or rejects with an\n * Error\n * @example\n * try {\n *   const data = await dataClasses();\n *   if (data) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n */\nexport function dataClasses(\n  options: {\n    /**\n     * a custom base URL for the haveibeenpwned.com API endpoints (default:\n     * `https://haveibeenpwned.com/api/v3`)\n     */\n    baseUrl?: string;\n    /**\n     * timeout for the request in milliseconds (default: none)\n     */\n    timeoutMs?: number;\n    /**\n     * a custom string to send as the User-Agent field in the request headers\n     * (default: `hibp <version>`)\n     */\n    userAgent?: string;\n  } = {},\n): Promise<string[] | null> {\n  return fetchFromApi('/dataclasses', options) as Promise<string[] | null>;\n}\n","import { fetchFromApi } from './api/pwnedpasswords/fetch-from-api.js';\n\nexport type PwnedPasswordSuffixes = Record<string, number>;\n\n/**\n * An object mapping an exposed password hash suffix (corresponding to a given\n * hash prefix) to how many times it occurred in the Pwned Passwords repository.\n *\n * @typedef {Object.<string, number>} PwnedPasswordSuffixes\n */\n\n/**\n * Fetches the SHA-1 or NTLM hash suffixes for the given 5-character hash\n * prefix.\n *\n * When a password hash with the same first 5 characters is found in the Pwned\n * Passwords repository, the API will respond with an HTTP 200 and include the\n * suffix of every hash beginning with the specified prefix, followed by a count\n * of how many times it appears in the data set. This function parses the\n * response and returns a more structured format.\n *\n * @param {string} prefix the first 5 characters of a password hash (case\n * insensitive)\n * @param {object} [options] a configuration object\n * @param {boolean} [options.addPadding] ask the remote API to add padding to\n * the response to obscure the password prefix (default: `false`)\n * @param {'sha1' | 'ntlm'} [options.mode] return SHA-1 or NTLM hashes\n * (default: `sha1`)\n * @param {string} [options.baseUrl] a custom base URL for the\n * pwnedpasswords.com API endpoints (default: `https://api.pwnedpasswords.com`)\n * @param {number} [options.timeoutMs] timeout for the request in milliseconds\n * (default: none)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {Promise<PwnedPasswordSuffixes>} a Promise which resolves to an\n * object mapping the `suffix` that when matched with the prefix composes the\n * complete hash, to the `count` of how many times it appears in the breached\n * password data set, or rejects with an Error\n *\n * @example\n * try {\n *   const results = await pwnedPasswordRange(\"5BAA6\");\n *   // results will have the following shape:\n *   // {\n *   //   \"003D68EB55068C33ACE09247EE4C639306B\": 3,\n *   //   \"012C192B2F16F82EA0EB9EF18D9D539B0DD\": 1,\n *   //   ...\n *   // }\n * } catch (err) {\n *   // ...\n * }\n * @example\n * try {\n *   const suffix = \"1E4C9B93F3F0682250B6CF8331B7EE68FD8\";\n *   const results = await pwnedPasswordRange(\"5BAA6\");\n *   const numPwns = results[suffix] || 0;\n * } catch (err) {\n *   // ...\n * }\n * @see https://haveibeenpwned.com/api/v3#SearchingPwnedPasswordsByRange\n */\nexport async function pwnedPasswordRange(\n  prefix: string,\n  options: {\n    /**\n     * ask the remote API to add padding to the response to obscure the password\n     * prefix (default: `false`)\n     */\n    addPadding?: boolean;\n    /**\n     * return SHA-1 or NTLM hashes (default: `sha1`)\n     */\n    mode?: 'sha1' | 'ntlm';\n    /**\n     * a custom base URL for the haveibeenpwned.com API endpoints (default:\n     * `https://haveibeenpwned.com/api/v3`)\n     */\n    baseUrl?: string;\n    /**\n     * timeout for the request in milliseconds (default: none)\n     */\n    timeoutMs?: number;\n    /**\n     * a custom string to send as the User-Agent field in the request headers\n     * (default: `hibp <version>`)\n     */\n    userAgent?: string;\n  } = {},\n): Promise<PwnedPasswordSuffixes> {\n  const { baseUrl, timeoutMs, userAgent, addPadding = false, mode = 'sha1' } = options;\n\n  const data = await fetchFromApi(`/range/${encodeURIComponent(prefix)}`, {\n    baseUrl,\n    timeoutMs,\n    userAgent,\n    addPadding,\n    mode,\n  });\n\n  // create array from lines of text in response body\n  const results = data.split('\\n').filter(Boolean);\n\n  // convert into an object mapping suffix to count for each line\n  return results.reduce<PwnedPasswordSuffixes>((acc, row) => {\n    const [suffix, countString] = row.split(':');\n    acc[suffix] = Number.parseInt(countString, 10);\n    return acc;\n  }, {});\n}\n","import JSSHA from 'jssha/dist/sha1';\nimport { pwnedPasswordRange } from './pwned-password-range.js';\n\n/**\n * Fetches the number of times the the given password has been exposed in a\n * breach (0 indicating no exposure). The password is given in plain text, but\n * only the first 5 characters of its SHA-1 hash will be submitted to the API.\n *\n * @param {string} password a password in plain text\n * @param {object} [options] a configuration object\n * @param {boolean} [options.addPadding] ask the remote API to add padding to\n * the response to obscure the password prefix (default: `false`)\n * @param {string} [options.baseUrl] a custom base URL for the\n * pwnedpasswords.com API endpoints (default: `https://api.pwnedpasswords.com`)\n * @param {number} [options.timeoutMs] timeout for the request in milliseconds\n * (default: none)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {Promise<number>} a Promise which resolves to the number of times\n * the password has been exposed in a breach, or rejects with an Error\n * @example\n * try {\n *   const numPwns = await pwnedPassword(\"f00b4r\");\n *   // truthy check or numeric condition\n *   if (numPwns) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n * @see https://haveibeenpwned.com/api/v3#PwnedPasswords\n */\nexport async function pwnedPassword(\n  password: string,\n  options: {\n    /**\n     * ask the remote API to add padding to the response to obscure the password\n     * prefix (default: `false`)\n     */\n    addPadding?: boolean;\n    /**\n     * a custom base URL for the haveibeenpwned.com API endpoints (default:\n     * `https://haveibeenpwned.com/api/v3`)\n     */\n    baseUrl?: string;\n    /**\n     * timeout for the request in milliseconds (default: none)\n     */\n    timeoutMs?: number;\n    /**\n     * a custom string to send as the User-Agent field in the request headers\n     * (default: `hibp <version>`)\n     */\n    userAgent?: string;\n  } = {},\n): Promise<number> {\n  // @ts-expect-error: JSSHA types are busted\n  const sha1 = new JSSHA('SHA-1', 'TEXT');\n  sha1.update(password);\n  const hash = sha1.getHash('HEX', { outputUpper: true });\n  const prefix = hash.slice(0, 5);\n  const suffix = hash.slice(5);\n\n  const range = await pwnedPasswordRange(prefix, options);\n  return range[suffix] || 0;\n}\n","import type { Breach, Paste } from './api/haveibeenpwned/types.js';\nimport { breachedAccount } from './breached-account.js';\nimport { pasteAccount } from './paste-account.js';\n\nexport interface SearchResults {\n  breaches: Breach[] | null;\n  pastes: Paste[] | null;\n}\n\n/**\n * An object representing search results.\n *\n * @typedef {object} SearchResults\n * @property {(Breach[] | null)} breaches\n * @property {(Paste[] | null)} pastes\n */\n\n/**\n * Fetches all breaches and all pastes associated with the provided account\n * (email address or username). Note that the remote API does not support\n * querying pastes by username (only email addresses), so in the event the\n * provided account is not a valid email address, only breach data is queried\n * and the \"pastes\" field of the resulting object will always be null. This is\n * exactly how searching via the current web interface behaves, which this\n * convenience method is designed to mimic.\n *\n * 🔑 `haveibeenpwned.com` requires an API key from\n * https://haveibeenpwned.com/API/Key for the `breachedaccount` and\n * `pasteaccount` endpoints. The `apiKey` option here is not explicitly\n * required, but direct requests made without it will fail (unless you specify a\n * `baseUrl` to a proxy that inserts a valid API key on your behalf).\n *\n * @param {string} account an email address or username\n * @param {object} [options] a configuration object\n * @param {string} [options.apiKey] an API key from\n * https://haveibeenpwned.com/API/Key (default: undefined)\n * @param {string} [options.domain] a domain by which to filter the breach\n * results (default: all domains)\n * @param {boolean} [options.truncate] truncate the breach results to only\n * include the name of each breach (default: true)\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {number} [options.timeoutMs] timeout for the request in milliseconds\n * (default: none)\n * @param {string} [options.userAgent] a custom string to send as the\n * User-Agent field in the request headers (default: `hibp <version>`)\n * @returns {Promise<SearchResults>} a Promise which resolves to an object\n * containing a \"breaches\" key (which can be null or an array of breach objects)\n * and a \"pastes\" key (which can be null or an array of paste objects), or\n * rejects with an Error\n * @example\n * try {\n *   const data = await search(\"foo\", { apiKey: \"my-api-key\" });\n *   if (data.breaches || data.pastes) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n * @example\n * try {\n *   const data = await search(\"nobody@nowhere.com\", {\n *     baseUrl: \"https://my-hibp-proxy:8080\",\n *     truncate: false,\n *   });\n *   if (data.breaches || data.pastes) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n * @see https://haveibeenpwned.com/\n */\nexport async function search(\n  account: string,\n  options: {\n    /**\n     * an API key from https://haveibeenpwned.com/API/Key (default: undefined)\n     */\n    apiKey?: string;\n    /**\n     * a domain by which to filter the results (default: all domains)\n     */\n    domain?: string;\n    /**\n     * truncate the results to only include the name of each breach (default:\n     * true)\n     */\n    truncate?: boolean;\n    /**\n     * a custom base URL for the haveibeenpwned.com API endpoints (default:\n     * `https://haveibeenpwned.com/api/v3`)\n     */\n    baseUrl?: string;\n    /**\n     * timeout for the request in milliseconds (default: none)\n     */\n    timeoutMs?: number;\n    /**\n     * a custom string to send as the User-Agent field in the request headers\n     * (default: `hibp <version>`)\n     */\n    userAgent?: string;\n  } = {},\n): Promise<SearchResults> {\n  const { apiKey, domain, truncate = true, baseUrl, timeoutMs, userAgent } = options;\n\n  const [breaches, pastes] = await Promise.all([\n    breachedAccount(account, {\n      apiKey,\n      domain,\n      truncate,\n      baseUrl,\n      timeoutMs,\n      userAgent,\n    }),\n    // This email regex is garbage but it seems to be what the API uses:\n    /^.+@.+$/.test(account)\n      ? pasteAccount(account, { apiKey, baseUrl, timeoutMs, userAgent })\n      : null,\n  ]);\n\n  return { breaches, pastes };\n}\n","import type { SubscriptionStatus } from './api/haveibeenpwned/types.js';\nimport { fetchFromApi } from './api/haveibeenpwned/fetch-from-api.js';\n\n/**\n * An object representing the status of your HIBP subscription.\n *\n * @typedef {object} SubscriptionStatus\n * @property {string} SubscriptionName\n * @property {string} Description\n * @property {string} SubscribedUntil\n * @property {number} Rpm\n * @property {number} DomainSearchMaxBreachedAccounts\n */\n\n/**\n * Fetches the current status of your HIBP subscription (API key).\n *\n * 🔑 `haveibeenpwned.com` requires an API key from\n * https://haveibeenpwned.com/API/Key for the `subscription/status` endpoint.\n * The `apiKey` option here is not explicitly required, but direct requests made\n * without it will fail (unless you specify a `baseUrl` to a proxy that inserts\n * a valid API key on your behalf).\n *\n * @param {object} [options] a configuration object\n * @param {string} [options.apiKey] an API key from\n * https://haveibeenpwned.com/API/Key (default: undefined)\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {number} [options.timeoutMs] timeout for the request in milliseconds\n * (default: none)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {Promise<SubscriptionStatus>} a Promise which resolves to a\n * subscription status object, or rejects with an Error\n * @example\n * try {\n *   const data = await subscriptionStatus({ apiKey: \"my-api-key\" });\n *   // ...\n * } catch (err) {\n *   // ...\n * }\n * @example\n * try {\n *   const data = await subscriptionStatus({\n *     baseUrl: \"https://my-hibp-proxy:8080\",\n *   });\n *   // ...\n * } catch (err) {\n *   // ...\n * }\n */\nexport async function subscriptionStatus(\n  options: {\n    /**\n     * an API key from https://haveibeenpwned.com/API/Key (default: undefined)\n     */\n    apiKey?: string;\n    /**\n     * a custom base URL for the haveibeenpwned.com API endpoints (default:\n     * `https://haveibeenpwned.com/api/v3`)\n     */\n    baseUrl?: string;\n    /**\n     * timeout for the request in milliseconds (default: none)\n     */\n    timeoutMs?: number;\n    /**\n     * a custom string to send as the User-Agent field in the request headers\n     * (default: `hibp <version>`)\n     */\n    userAgent?: string;\n  } = {},\n) {\n  const endpoint = '/subscription/status';\n\n  return fetchFromApi(endpoint, options) as Promise<SubscriptionStatus>;\n}\n","/**\n * Known potential responses from the remote API.\n *\n * Unfortunately, the API does not send a decent human-readable message back with each response, but\n * they are documented on the website: https://haveibeenpwned.com/api/v3#ResponseCodes\n *\n * These objects simply provide a mapping between the HTTP response status code and the\n * corresponding human-readable message so we can throw a more descriptive error for the consumer.\n * (They are also leveraged in our tests.)\n */\n\n/** @internal */\nexport const BAD_REQUEST = {\n  status: 400 as const,\n  statusText: 'Bad request — the account does not comply with an acceptable format.',\n};\n\n/**\n * The API includes a human-readable error message as text in the body of this\n * response type. Manually populating the message here purely for use in tests.\n *\n * @internal\n */\nexport const UNAUTHORIZED = {\n  status: 401 as const,\n  body: `Your request to the API couldn't be authorised. Check you have the right value in the \"hibp-api-key\" header, refer to the documentation for more: https://haveibeenpwned.com/API/v3#Authorisation`,\n};\n\n/** @internal */\nexport const FORBIDDEN = {\n  status: 403 as const,\n  statusText: 'Forbidden - access denied.',\n};\n\n/** @internal */\nexport const BLOCKED = {\n  headers: new Map([['cf-ray', 'someRayId']]),\n  status: 403 as const,\n};\n\n/** @internal */\nexport const NOT_FOUND = {\n  status: 404 as const,\n};\n\n/**\n * The API includes a JSON object containing a human-readable message in the\n * body of this response type. Manually populating the message here purely for\n * use in tests.\n *\n * @internal\n */\nexport const TOO_MANY_REQUESTS = {\n  headers: new Map([['retry-after', '2']]),\n  status: 429 as const,\n  body: {\n    statusCode: 429 as const,\n    message: 'Rate limit is exceeded. Try again in 2 seconds.',\n  },\n};\n","import type { PackageJson } from 'type-fest';\nimport { installUndiciOnNode18 } from '../fetch-polyfill.js';\nimport { BAD_REQUEST, UNAUTHORIZED, FORBIDDEN, NOT_FOUND, TOO_MANY_REQUESTS } from './responses.js';\nimport type { ApiData, ErrorData } from './types.js';\n\ninstallUndiciOnNode18();\n\n/**\n * Custom error thrown when the haveibeenpwned.com API responds with 429 Too\n * Many Requests. See the `retryAfterSeconds` property for the number of seconds\n * to wait before attempting the request again.\n *\n * @see https://haveibeenpwned.com/API/v3#RateLimiting\n */\nexport class RateLimitError extends Error {\n  /**\n   * The number of seconds to wait before attempting the request again. May be\n   * `undefined` if the API does not provide a `retry-after` header, but this\n   * should never happen.\n   */\n  public retryAfterSeconds: number | undefined;\n\n  constructor(\n    retryAfter: ReturnType<Headers['get']>,\n    message: string | undefined,\n    options?: ErrorOptions,\n  ) {\n    super(message, options);\n    this.name = this.constructor.name;\n    this.retryAfterSeconds =\n      typeof retryAfter === 'string'\n        ? Number.parseInt(retryAfter, 10) /* c8 ignore start */\n        : undefined; /* c8 ignore stop */\n  }\n}\n\nfunction blockedWithRayId(rayId: string) {\n  return `Request blocked, contact haveibeenpwned.com if this continues (Ray ID: ${rayId})`;\n}\n\n/**\n * Fetches data from the supplied API endpoint.\n *\n * HTTP status code 200 returns an Object (data found).\n * HTTP status code 404 returns null (no data found).\n * HTTP status code 400 throws an Error (bad request).\n * HTTP status code 401 throws an Error (unauthorized).\n * HTTP status code 403 throws an Error (forbidden).\n * HTTP status code 429 throws an Error (too many requests).\n *\n * @internal\n * @private\n * @param {string} endpoint the API endpoint to query\n * @param {object} [options] a configuration object\n * @param {string} [options.apiKey] an API key from\n * https://haveibeenpwned.com/API/Key\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {number} [options.timeoutMs] timeout for the request in milliseconds\n * (default: none)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {Promise<ApiData>} a Promise which resolves to the data resulting\n * from the query (or null for 404 Not Found responses), or rejects with an\n * Error\n */\nexport async function fetchFromApi(\n  endpoint: string,\n  options: {\n    apiKey?: string;\n    baseUrl?: string;\n    timeoutMs?: number;\n    userAgent?: string;\n  } = {},\n): Promise<ApiData> {\n  const { apiKey, baseUrl = 'https://haveibeenpwned.com/api/v3', timeoutMs, userAgent } = options;\n  const headers: Record<string, string> = {};\n\n  if (apiKey) {\n    headers['HIBP-API-Key'] = apiKey;\n  }\n\n  if (userAgent) {\n    headers['User-Agent'] = userAgent;\n  }\n\n  // Provide a default User-Agent when running outside the browser\n  if (!userAgent && typeof navigator === 'undefined') {\n    const { name, version } = (await import('../../../package.json', {\n      assert: { type: 'json' },\n    })) as unknown as PackageJson;\n    headers['User-Agent'] = `${name} ${version}`;\n  }\n\n  const config: RequestInit = {\n    headers,\n    ...(timeoutMs ? { signal: AbortSignal.timeout(timeoutMs) } : {}),\n  };\n  const url = `${baseUrl.replace(/\\/$/g, '')}${endpoint}`;\n  const response = await fetch(url, config);\n\n  if (response.ok) return response.json() as Promise<ApiData>;\n\n  switch (response.status) {\n    case BAD_REQUEST.status: {\n      throw new Error(BAD_REQUEST.statusText);\n    }\n    case UNAUTHORIZED.status: {\n      const message = await response.text();\n      throw new Error(message);\n    }\n    case FORBIDDEN.status: {\n      const rayId = response.headers.get('cf-ray');\n      if (rayId) throw new Error(blockedWithRayId(rayId));\n      throw new Error(FORBIDDEN.statusText);\n    }\n    case NOT_FOUND.status: {\n      return null;\n    }\n    case TOO_MANY_REQUESTS.status: {\n      const body = (await response.json()) as unknown as ErrorData;\n      const retryAfter = response.headers.get('retry-after');\n      throw new RateLimitError(retryAfter, body.message);\n    }\n    default: {\n      throw new Error(response.statusText);\n    }\n  }\n}\n","import type { Breach } from './api/haveibeenpwned/types.js';\nimport { fetchFromApi } from './api/haveibeenpwned/fetch-from-api.js';\n\n/**\n * Fetches breach data for a specific account.\n *\n * 🔑 `haveibeenpwned.com` requires an API key from\n * https://haveibeenpwned.com/API/Key for the `breachedaccount` endpoint. The\n * `apiKey` option here is not explicitly required, but direct requests made\n * without it will fail (unless you specify a `baseUrl` to a proxy that inserts\n * a valid API key on your behalf).\n *\n * @param {string} account a username or email address\n * @param {object} [options] a configuration object\n * @param {string} [options.apiKey] an API key from\n * https://haveibeenpwned.com/API/Key (default: undefined)\n * @param {string} [options.domain] a domain by which to filter the results\n * (default: all domains)\n * @param {boolean} [options.includeUnverified] include \"unverified\" breaches in\n * the results (default: true)\n * @param {number} [options.timeoutMs] timeout for the request in milliseconds\n * (default: none)\n * @param {boolean} [options.truncate] truncate the results to only include\n * the name of each breach (default: true)\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {(Promise<Breach[]> | Promise<null>)} a Promise which resolves to an\n * array of breach objects (or null if no breaches were found), or rejects with\n * an Error\n * @example\n * try {\n *   const data = await breachedAccount(\"foo\", { apiKey: \"my-api-key\" });\n *   if (data) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n * @example\n * try {\n *   const data = await breachedAccount(\"bar\", {\n *     includeUnverified: false,\n *     baseUrl: \"https://my-hibp-proxy:8080\",\n *   });\n *   if (data) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n * @example\n * try {\n *   const data = await breachedAccount(\"baz\", {\n *     apiKey: \"my-api-key\",\n *     domain: \"adobe.com\",\n *     truncate: false,\n *     userAgent: \"my-app 1.0\",\n *   });\n *   if (data) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n */\nexport function breachedAccount(\n  account: string,\n  options: {\n    /**\n     * an API key from https://haveibeenpwned.com/API/Key (default: undefined)\n     */\n    apiKey?: string;\n    /**\n     * a domain by which to filter the results (default: all domains)\n     */\n    domain?: string;\n    /**\n     * include \"unverified\" breaches in the results (default: true)\n     */\n    includeUnverified?: boolean;\n    /**\n     * timeout for the request in milliseconds (default: none)\n     */\n    timeoutMs?: number;\n    /**\n     * truncate the results to only include the name of each breach (default:\n     * true)\n     */\n    truncate?: boolean;\n    /**\n     * a custom base URL for the haveibeenpwned.com API endpoints (default:\n     * `https://haveibeenpwned.com/api/v3`)\n     */\n    baseUrl?: string;\n    /**\n     * a custom string to send as the User-Agent field in the request headers\n     * (default: `hibp <version>`)\n     */\n    userAgent?: string;\n  } = {},\n): Promise<Breach[] | null> {\n  const {\n    apiKey,\n    domain,\n    includeUnverified = true,\n    timeoutMs,\n    truncate = true,\n    baseUrl,\n    userAgent,\n  } = options;\n  const endpoint = `/breachedaccount/${encodeURIComponent(account)}?`;\n  const params: string[] = [];\n\n  if (domain) {\n    params.push(`domain=${encodeURIComponent(domain)}`);\n  }\n\n  if (!includeUnverified) {\n    params.push('includeUnverified=false');\n  }\n\n  if (!truncate) {\n    params.push('truncateResponse=false');\n  }\n\n  return fetchFromApi(`${endpoint}${params.join('&')}`, {\n    apiKey,\n    baseUrl,\n    timeoutMs,\n    userAgent,\n  }) as Promise<Breach[] | null>;\n}\n","import type { Paste } from './api/haveibeenpwned/types.js';\nimport { fetchFromApi } from './api/haveibeenpwned/fetch-from-api.js';\n\n/**\n * An object representing a paste.\n *\n * @typedef {object} Paste\n * @property {string} Id\n * @property {string} Source\n * @property {string} Title\n * @property {string} Date\n * @property {number} EmailCount\n */\n\n/**\n * Fetches paste data for a specific account (email address).\n *\n * 🔑 `haveibeenpwned.com` requires an API key from\n * https://haveibeenpwned.com/API/Key for the `pasteaccount` endpoint. The\n * `apiKey` option here is not explicitly required, but direct requests made\n * without it will fail (unless you specify a `baseUrl` to a proxy that inserts\n * a valid API key on your behalf).\n *\n * @param {string} email the email address to query\n * @param {object} [options] a configuration object\n * @param {string} [options.apiKey] an API key from\n * https://haveibeenpwned.com/API/Key (default: undefined)\n * @param {string} [options.baseUrl] a custom base URL for the\n * haveibeenpwned.com API endpoints (default:\n * `https://haveibeenpwned.com/api/v3`)\n * @param {number} [options.timeoutMs] timeout for the request in milliseconds\n * (default: none)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @returns {(Promise<Paste[]> | Promise<null>)} a Promise which resolves to an\n * array of paste objects (or null if no pastes were found), or rejects with an\n * Error\n * @example\n * try {\n *   const data = await pasteAccount(\"foo@bar.com\", { apiKey: \"my-api-key\" });\n *   if (data) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n * @example\n * try {\n *   const data = await pasteAccount(\"foo@bar.com\", {\n *     baseUrl: \"https://my-hibp-proxy:8080\",\n *   });\n *   if (data) {\n *     // ...\n *   } else {\n *     // ...\n *   }\n * } catch (err) {\n *   // ...\n * }\n */\nexport function pasteAccount(\n  email: string,\n  options: {\n    /**\n     * an API key from https://haveibeenpwned.com/API/Key (default: undefined)\n     */\n    apiKey?: string;\n    /**\n     * a custom base URL for the haveibeenpwned.com API endpoints (default:\n     * `https://haveibeenpwned.com/api/v3`)\n     */\n    baseUrl?: string;\n    /**\n     * timeout for the request in milliseconds (default: none)\n     */\n    timeoutMs?: number;\n    /**\n     * a custom string to send as the User-Agent field in the request headers\n     * (default: `hibp <version>`)\n     */\n    userAgent?: string;\n  } = {},\n): Promise<Paste[] | null> {\n  return fetchFromApi(`/pasteaccount/${encodeURIComponent(email)}`, options) as Promise<\n    Paste[] | null\n  >;\n}\n","/**\n * A JavaScript implementation of the SHA family of hashes - defined in FIPS PUB 180-4, FIPS PUB 202,\n * and SP 800-185 - as well as the corresponding HMAC implementation as defined in FIPS PUB 198-1.\n *\n * Copyright 2008-2023 Brian Turek, 1998-2009 Paul Johnston & Contributors\n * Distributed under the BSD License\n * See http://caligatio.github.com/jsSHA/ for more information\n */\nconst t=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",r=\"ARRAYBUFFER not supported by this environment\",n=\"UINT8ARRAY not supported by this environment\";function i(t,r,n,i){let e,s,o;const h=r||[0],u=(n=n||0)>>>3,f=-1===i?3:0;for(e=0;e<t.length;e+=1)o=e+u,s=o>>>2,h.length<=s&&h.push(0),h[s]|=t[e]<<8*(f+i*(o%4));return{value:h,binLen:8*t.length+n}}function e(e,s,o){switch(s){case\"UTF8\":case\"UTF16BE\":case\"UTF16LE\":break;default:throw new Error(\"encoding must be UTF8, UTF16BE, or UTF16LE\")}switch(e){case\"HEX\":return function(t,r,n){return function(t,r,n,i){let e,s,o,h;if(0!=t.length%2)throw new Error(\"String of HEX type must be in byte increments\");const u=r||[0],f=(n=n||0)>>>3,c=-1===i?3:0;for(e=0;e<t.length;e+=2){if(s=parseInt(t.substr(e,2),16),isNaN(s))throw new Error(\"String of HEX type contains invalid characters\");for(h=(e>>>1)+f,o=h>>>2;u.length<=o;)u.push(0);u[o]|=s<<8*(c+i*(h%4))}return{value:u,binLen:4*t.length+n}}(t,r,n,o)};case\"TEXT\":return function(t,r,n){return function(t,r,n,i,e){let s,o,h,u,f,c,a,w,E=0;const l=n||[0],A=(i=i||0)>>>3;if(\"UTF8\"===r)for(a=-1===e?3:0,h=0;h<t.length;h+=1)for(s=t.charCodeAt(h),o=[],128>s?o.push(s):2048>s?(o.push(192|s>>>6),o.push(128|63&s)):55296>s||57344<=s?o.push(224|s>>>12,128|s>>>6&63,128|63&s):(h+=1,s=65536+((1023&s)<<10|1023&t.charCodeAt(h)),o.push(240|s>>>18,128|s>>>12&63,128|s>>>6&63,128|63&s)),u=0;u<o.length;u+=1){for(c=E+A,f=c>>>2;l.length<=f;)l.push(0);l[f]|=o[u]<<8*(a+e*(c%4)),E+=1}else for(a=-1===e?2:0,w=\"UTF16LE\"===r&&1!==e||\"UTF16LE\"!==r&&1===e,h=0;h<t.length;h+=1){for(s=t.charCodeAt(h),!0===w&&(u=255&s,s=u<<8|s>>>8),c=E+A,f=c>>>2;l.length<=f;)l.push(0);l[f]|=s<<8*(a+e*(c%4)),E+=2}return{value:l,binLen:8*E+i}}(t,s,r,n,o)};case\"B64\":return function(r,n,i){return function(r,n,i,e){let s,o,h,u,f,c,a,w=0;const E=n||[0],l=(i=i||0)>>>3,A=-1===e?3:0,p=r.indexOf(\"=\");if(-1===r.search(/^[a-zA-Z0-9=+/]+$/))throw new Error(\"Invalid character in base-64 string\");if(r=r.replace(/=/g,\"\"),-1!==p&&p<r.length)throw new Error(\"Invalid '=' found in base-64 string\");for(o=0;o<r.length;o+=4){for(f=r.substr(o,4),u=0,h=0;h<f.length;h+=1)s=t.indexOf(f.charAt(h)),u|=s<<18-6*h;for(h=0;h<f.length-1;h+=1){for(a=w+l,c=a>>>2;E.length<=c;)E.push(0);E[c]|=(u>>>16-8*h&255)<<8*(A+e*(a%4)),w+=1}}return{value:E,binLen:8*w+i}}(r,n,i,o)};case\"BYTES\":return function(t,r,n){return function(t,r,n,i){let e,s,o,h;const u=r||[0],f=(n=n||0)>>>3,c=-1===i?3:0;for(s=0;s<t.length;s+=1)e=t.charCodeAt(s),h=s+f,o=h>>>2,u.length<=o&&u.push(0),u[o]|=e<<8*(c+i*(h%4));return{value:u,binLen:8*t.length+n}}(t,r,n,o)};case\"ARRAYBUFFER\":try{new ArrayBuffer(0)}catch(t){throw new Error(r)}return function(t,r,n){return function(t,r,n,e){return i(new Uint8Array(t),r,n,e)}(t,r,n,o)};case\"UINT8ARRAY\":try{new Uint8Array(0)}catch(t){throw new Error(n)}return function(t,r,n){return i(t,r,n,o)};default:throw new Error(\"format must be HEX, TEXT, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY\")}}function s(i,e,s,o){switch(i){case\"HEX\":return function(t){return function(t,r,n,i){const e=\"0123456789abcdef\";let s,o,h=\"\";const u=r/8,f=-1===n?3:0;for(s=0;s<u;s+=1)o=t[s>>>2]>>>8*(f+n*(s%4)),h+=e.charAt(o>>>4&15)+e.charAt(15&o);return i.outputUpper?h.toUpperCase():h}(t,e,s,o)};case\"B64\":return function(r){return function(r,n,i,e){let s,o,h,u,f,c=\"\";const a=n/8,w=-1===i?3:0;for(s=0;s<a;s+=3)for(u=s+1<a?r[s+1>>>2]:0,f=s+2<a?r[s+2>>>2]:0,h=(r[s>>>2]>>>8*(w+i*(s%4))&255)<<16|(u>>>8*(w+i*((s+1)%4))&255)<<8|f>>>8*(w+i*((s+2)%4))&255,o=0;o<4;o+=1)c+=8*s+6*o<=n?t.charAt(h>>>6*(3-o)&63):e.b64Pad;return c}(r,e,s,o)};case\"BYTES\":return function(t){return function(t,r,n){let i,e,s=\"\";const o=r/8,h=-1===n?3:0;for(i=0;i<o;i+=1)e=t[i>>>2]>>>8*(h+n*(i%4))&255,s+=String.fromCharCode(e);return s}(t,e,s)};case\"ARRAYBUFFER\":try{new ArrayBuffer(0)}catch(t){throw new Error(r)}return function(t){return function(t,r,n){let i;const e=r/8,s=new ArrayBuffer(e),o=new Uint8Array(s),h=-1===n?3:0;for(i=0;i<e;i+=1)o[i]=t[i>>>2]>>>8*(h+n*(i%4))&255;return s}(t,e,s)};case\"UINT8ARRAY\":try{new Uint8Array(0)}catch(t){throw new Error(n)}return function(t){return function(t,r,n){let i;const e=r/8,s=-1===n?3:0,o=new Uint8Array(e);for(i=0;i<e;i+=1)o[i]=t[i>>>2]>>>8*(s+n*(i%4))&255;return o}(t,e,s)};default:throw new Error(\"format must be HEX, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY\")}}function o(t){const r={outputUpper:!1,b64Pad:\"=\",outputLen:-1},n=t||{},i=\"Output length must be a multiple of 8\";if(r.outputUpper=n.outputUpper||!1,n.b64Pad&&(r.b64Pad=n.b64Pad),n.outputLen){if(n.outputLen%8!=0)throw new Error(i);r.outputLen=n.outputLen}else if(n.shakeLen){if(n.shakeLen%8!=0)throw new Error(i);r.outputLen=n.shakeLen}if(\"boolean\"!=typeof r.outputUpper)throw new Error(\"Invalid outputUpper formatting option\");if(\"string\"!=typeof r.b64Pad)throw new Error(\"Invalid b64Pad formatting option\");return r}class h{constructor(t,r,n){const i=n||{};if(this.t=r,this.i=i.encoding||\"UTF8\",this.numRounds=i.numRounds||1,isNaN(this.numRounds)||this.numRounds!==parseInt(this.numRounds,10)||1>this.numRounds)throw new Error(\"numRounds must a integer >= 1\");this.o=t,this.h=[],this.u=0,this.l=!1,this.A=0,this.p=!1,this.U=[],this.R=[]}update(t){let r,n=0;const i=this.T>>>5,e=this.F(t,this.h,this.u),s=e.binLen,o=e.value,h=s>>>5;for(r=0;r<h;r+=i)n+this.T<=s&&(this.m=this.g(o.slice(r,r+i),this.m),n+=this.T);return this.A+=n,this.h=o.slice(n>>>5),this.u=s%this.T,this.l=!0,this}getHash(t,r){let n,i,e=this.B;const h=o(r);if(this.v){if(-1===h.outputLen)throw new Error(\"Output length must be specified in options\");e=h.outputLen}const u=s(t,e,this.H,h);if(this.p&&this.C)return u(this.C(h));for(i=this.Y(this.h.slice(),this.u,this.A,this.I(this.m),e),n=1;n<this.numRounds;n+=1)this.v&&e%32!=0&&(i[i.length-1]&=16777215>>>24-e%32),i=this.Y(i,e,0,this.L(this.o),e);return u(i)}setHMACKey(t,r,n){if(!this.M)throw new Error(\"Variant does not support HMAC\");if(this.l)throw new Error(\"Cannot set MAC key after calling update\");const i=e(r,(n||{}).encoding||\"UTF8\",this.H);this.N(i(t))}N(t){const r=this.T>>>3,n=r/4-1;let i;if(1!==this.numRounds)throw new Error(\"Cannot set numRounds with MAC\");if(this.p)throw new Error(\"MAC key already set\");for(r<t.binLen/8&&(t.value=this.Y(t.value,t.binLen,0,this.L(this.o),this.B));t.value.length<=n;)t.value.push(0);for(i=0;i<=n;i+=1)this.U[i]=909522486^t.value[i],this.R[i]=1549556828^t.value[i];this.m=this.g(this.U,this.m),this.A=this.T,this.p=!0}getHMAC(t,r){const n=o(r);return s(t,this.B,this.H,n)(this.S())}S(){let t;if(!this.p)throw new Error(\"Cannot call getHMAC without first setting MAC key\");const r=this.Y(this.h.slice(),this.u,this.A,this.I(this.m),this.B);return t=this.g(this.R,this.L(this.o)),t=this.Y(r,this.B,this.T,t,this.B),t}}function u(t,r){return t<<r|t>>>32-r}function f(t,r,n){return t^r^n}function c(t,r,n){return t&r^t&n^r&n}function a(t,r){const n=(65535&t)+(65535&r);return(65535&(t>>>16)+(r>>>16)+(n>>>16))<<16|65535&n}function w(t,r,n,i,e){const s=(65535&t)+(65535&r)+(65535&n)+(65535&i)+(65535&e);return(65535&(t>>>16)+(r>>>16)+(n>>>16)+(i>>>16)+(e>>>16)+(s>>>16))<<16|65535&s}function E(t){return[1732584193,4023233417,2562383102,271733878,3285377520]}function l(t,r){let n,i,e,s,o,h,E;const l=[];for(n=r[0],i=r[1],e=r[2],s=r[3],o=r[4],E=0;E<80;E+=1)l[E]=E<16?t[E]:u(l[E-3]^l[E-8]^l[E-14]^l[E-16],1),h=E<20?w(u(n,5),(A=i)&e^~A&s,o,1518500249,l[E]):E<40?w(u(n,5),f(i,e,s),o,1859775393,l[E]):E<60?w(u(n,5),c(i,e,s),o,2400959708,l[E]):w(u(n,5),f(i,e,s),o,3395469782,l[E]),o=s,s=e,e=u(i,30),i=n,n=h;var A;return r[0]=a(n,r[0]),r[1]=a(i,r[1]),r[2]=a(e,r[2]),r[3]=a(s,r[3]),r[4]=a(o,r[4]),r}function A(t,r,n,i){let e;const s=15+(r+65>>>9<<4),o=r+n;for(;t.length<=s;)t.push(0);for(t[r>>>5]|=128<<24-r%32,t[s]=4294967295&o,t[s-1]=o/4294967296|0,e=0;e<t.length;e+=16)i=l(t.slice(e,e+16),i);return i}class p extends h{constructor(t,r,n){if(\"SHA-1\"!==t)throw new Error(\"Chosen SHA variant is not supported\");super(t,r,n);const i=n||{};this.M=!0,this.C=this.S,this.H=-1,this.F=e(this.t,this.i,this.H),this.g=l,this.I=function(t){return t.slice()},this.L=E,this.Y=A,this.m=[1732584193,4023233417,2562383102,271733878,3285377520],this.T=512,this.B=160,this.v=!1,i.hmacKey&&this.N(function(t,r,n,i){const s=t+\" must include a value and format\";if(!r){if(!i)throw new Error(s);return i}if(void 0===r.value||!r.format)throw new Error(s);return e(r.format,r.encoding||\"UTF8\",n)(r.value)}(\"hmacKey\",i.hmacKey,this.H))}}export{p as default};\n","/**\n * Known potential responses from the remote API.\n *\n * https://haveibeenpwned.com/api/v3#PwnedPasswords\n *\n */\n\n/** @internal */\nexport const BAD_REQUEST = {\n  status: 400 as const,\n  body: 'The hash prefix was not in a valid format',\n};\n","import { installUndiciOnNode18 } from '../fetch-polyfill.js';\nimport { BAD_REQUEST } from './responses.js';\n\ninstallUndiciOnNode18();\n\n/**\n * Fetches data from the supplied API endpoint.\n *\n * HTTP status code 200 returns plain text (data found).\n * HTTP status code 400 throws an Error (bad request).\n *\n * @internal\n * @private\n * @param {string} endpoint the API endpoint to query\n * @param {object} [options] a configuration object\n * @param {string} [options.baseUrl] a custom base URL for the\n * pwnedpasswords.com API endpoints (default: `https://api.pwnedpasswords.com`)\n * @param {number} [options.timeoutMs] timeout for the request in milliseconds\n * (default: none)\n * @param {string} [options.userAgent] a custom string to send as the User-Agent\n * field in the request headers (default: `hibp <version>`)\n * @param {boolean} [options.addPadding] ask the remote API to add padding to\n * the response to obscure the password prefix (default: `false`)\n * @param {'sha1' | 'ntlm'} [options.mode] return SHA-1 or NTLM hashes\n * (default: `sha1`)\n * @returns {Promise<string>} a Promise which resolves to the data resulting\n * from the query, or rejects with an Error\n */\nexport async function fetchFromApi(\n  endpoint: string,\n  options: {\n    baseUrl?: string;\n    timeoutMs?: number;\n    userAgent?: string;\n    addPadding?: boolean;\n    mode?: 'sha1' | 'ntlm';\n  } = {},\n): Promise<string> {\n  const {\n    baseUrl = 'https://api.pwnedpasswords.com',\n    timeoutMs,\n    userAgent,\n    addPadding = false,\n    mode = 'sha1',\n  } = options;\n\n  const config: RequestInit = {\n    headers: {\n      ...(userAgent ? { 'User-Agent': userAgent } : {}),\n      ...(addPadding ? { 'Add-Padding': 'true' } : {}),\n    },\n    ...(timeoutMs ? { signal: AbortSignal.timeout(timeoutMs) } : {}),\n  };\n  const url = `${baseUrl.replace(/\\/$/g, '')}${endpoint}?mode=${mode}`;\n  const response = await fetch(url, config);\n\n  if (response.ok) return response.text();\n\n  if (response.status === BAD_REQUEST.status) {\n    const text = await response.text();\n    throw new Error(text);\n  }\n\n  throw new Error(response.statusText);\n}\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","create","Generator","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","apply","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","asyncGeneratorStep","_asyncToGenerator","_next","_throw","_defineProperties","_toPropertyKey","key","_createClass","_classCallCheck","_callSuper","_getPrototypeOf","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","_inherits","_setPrototypeOf","_wrapNativeSuper","Map","Function","toString","indexOf","_isNativeFunction","has","get","set","Wrapper","bind","_construct","Boolean","valueOf","toPrimitive","String","Number","_toPrimitive","installUndiciOnNode18","_process$versions","process","versions","node","startsWith","_require","require","undiciFetch","fetch","UndiciFormData","FormData","UndiciHeaders","Headers","UndiciRequest","Request","UndiciResponse","Response","global","File","breachName","options","fetchFromApi","concat","encodeURIComponent","undefined","domain","baseUrl","timeoutMs","userAgent","params","join","_x4","_pwnedPassword","_x5","_search","_subscriptionStatus","BAD_REQUEST","status","statusText","UNAUTHORIZED","body","FORBIDDEN","NOT_FOUND","TOO_MANY_REQUESTS","headers","statusCode","message","RateLimitError","_exports","_Error","retryAfter","_this","retryAfterSeconds","parseInt","blockedWithRayId","rayId","_x","_fetchFromApi$","_callee","endpoint","apiKey","_options$baseUrl","_yield$Promise$resolv","_version","config","url","response","_args","_context","navigator","_package","version","signal","AbortSignal","timeout","replace","ok","json","t0","text","breachedAccount","account","_options$includeUnver","includeUnverified","_options$truncate","truncate","pasteAccount","email","binLen","substr","w","E","A","charCodeAt","search","ArrayBuffer","Uint8Array","outputUpper","toUpperCase","b64Pad","fromCharCode","outputLen","shakeLen","encoding","numRounds","U","R","update","T","F","m","B","H","C","Y","I","L","M","N","S","_h3","_this2","hmacKey","format","_x2","_fetchFromApi","_callee2","_options$baseUrl2","_options$addPadding","addPadding","_options$mode","mode","_args2","_context2","pwnedPasswordRange","_x3","_pwnedPasswordRange","_callee3","prefix","_options$addPadding2","_options$mode2","results","_args3","_context3","split","reduce","acc","row","_row$split2","_slicedToArray","_callee4","password","sha1","hash","suffix","_args4","_context4","JSSHA","getHash","_callee5","_options$truncate2","_yield$Promise$all2","_args5","_context5","all","test","breaches","pastes","_callee6","_args6","_context6"],"mappings":"u7CAEAA,EAAAA,WAAAC,OAAAA,OAAAC,EAAAD,EAAA,CAAA,EAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAAP,SAAAA,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAAC,EAAAA,EAAAC,mBAAAA,OAAAA,UAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAAC,kBAAAA,EAAAN,EAAAO,aAAA,gBAAA,SAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAAS,CAAAA,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAApB,IAAAA,EAAAD,EAAAkB,CAAAA,IAAAA,eAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAAoB,CAAAA,CAAAA,SAAAA,EAAArB,EAAAD,EAAAE,EAAAG,GAAAK,IAAAE,EAAAT,OAAAoB,QAAAvB,GAAAA,EAAAI,qBAAAoB,EAAAxB,EAAAwB,GAAApB,WAAAU,EAAAW,IAAAA,EAAApB,cAAAE,EAAAK,EAAA,UAAA,CAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,CAAA,SAAAe,EAAA1B,EAAAD,EAAAE,GAAA,IAAA,MAAA,CAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,UAAAD,GAAA,MAAA,CAAA2B,KAAA,QAAAC,IAAA5B,EAAAD,CAAAA,CAAAA,EAAAsB,KAAAA,MAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAAC,YAAAA,EAAAX,CAAAA,EAAAA,SAAAA,IAAAY,CAAAA,SAAAA,IAAAC,CAAAA,SAAAA,IAAAC,CAAAA,IAAAA,EAAApB,CAAAA,EAAAA,EAAAoB,EAAA1B,GAAA,WAAA,OAAA2B,IAAA,IAAA,IAAAC,EAAArC,OAAAsC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAxC,GAAAG,EAAAyB,KAAAY,EAAA9B,KAAA0B,EAAAI,GAAAE,IAAAA,EAAAP,EAAAjC,UAAAoB,EAAApB,UAAAD,OAAAoB,OAAAe,GAAAO,SAAAA,EAAA5C,GAAA,CAAA,OAAA,QAAA,UAAA6C,SAAA9C,SAAAA,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,OAAAsC,KAAAQ,QAAA/C,EAAAC,EAAA+C,GAAAA,GAAAA,CAAAA,SAAAA,EAAA/C,EAAAD,GAAAiD,SAAAA,EAAA/C,EAAAK,EAAAG,EAAAE,GAAAE,IAAAA,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAAO,GAAAA,UAAAA,EAAAc,KAAAZ,CAAAA,IAAAA,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAmB,EAAAnB,IAAA1B,EAAAyB,KAAAC,aAAA/B,EAAAmD,QAAApB,EAAAqB,SAAAC,MAAApD,SAAAA,GAAAgD,SAAAhD,EAAAS,EAAAE,EAAA,IAAA,SAAAX,GAAAgD,EAAAhD,QAAAA,EAAAS,EAAAE,EAAA,IAAAZ,EAAAmD,QAAApB,GAAAsB,MAAApD,SAAAA,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAAf,IAAAA,SAAAA,GAAAgD,OAAAA,EAAAhD,QAAAA,EAAAS,EAAAE,EAAA,GAAA,CAAAA,EAAAE,EAAAe,IAAA3B,CAAAA,IAAAA,EAAAK,kBAAAE,MAAA,SAAAR,EAAAI,YAAAiD,IAAA,OAAA,IAAAtD,GAAA,SAAAA,EAAAE,GAAA+C,EAAAhD,EAAAI,EAAAL,EAAAE,EAAAA,GAAAA,CAAAA,OAAAA,EAAAA,EAAAA,EAAAmD,KAAAC,EAAAA,GAAAA,GAAA5B,GAAAA,CAAAA,SAAAA,EAAA1B,EAAAE,EAAAG,GAAAE,IAAAA,EAAAwB,kBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAAsB,MAAAA,MAAAhD,gCAAAA,GAAAA,IAAA2B,gBAAAxB,EAAA,MAAAE,EAAA,MAAA,CAAAH,MAAAR,EAAAuD,MAAAnD,EAAAA,CAAAA,IAAAA,EAAAoD,OAAA/C,EAAAL,EAAAwB,IAAAjB,IAAAE,CAAAA,IAAAA,EAAAT,EAAAqD,YAAA5C,EAAA,CAAA,IAAAE,EAAA2C,EAAA7C,EAAAT,GAAAW,GAAAA,EAAAA,CAAAA,GAAAA,IAAAmB,EAAA,SAAA,OAAAnB,CAAA,CAAA,CAAA,GAAA,SAAAX,EAAAoD,OAAApD,EAAAuD,KAAAvD,EAAAwD,MAAAxD,EAAAwB,SAAA,GAAA,UAAAxB,EAAAoD,OAAAlD,CAAAA,GAAAA,IAAAwB,EAAAxB,MAAAA,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAyD,kBAAAzD,EAAAwB,IAAAxB,KAAAA,WAAAA,EAAAoD,QAAApD,EAAA0D,OAAA,SAAA1D,EAAAwB,KAAAtB,EAAA0B,EAAAK,IAAAA,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,GAAA,WAAAiC,EAAAV,KAAArB,CAAAA,GAAAA,EAAAF,EAAAmD,KAAAtB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA1B,SAAAA,MAAAA,CAAAA,MAAA6B,EAAAT,IAAA2B,KAAAnD,EAAAmD,KAAAlB,CAAAA,UAAAA,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAoD,OAAApD,QAAAA,EAAAwB,IAAAS,EAAAT,IAAA,CAAA,CAAA,CAAA,SAAA8B,EAAA3D,EAAAE,OAAAG,EAAAH,EAAAuD,OAAAlD,EAAAP,EAAAa,SAAAR,GAAAE,GAAAA,IAAAN,EAAAC,OAAAA,EAAAwD,wBAAArD,GAAAL,EAAAa,SAAAmD,SAAA9D,EAAAuD,OAAAvD,SAAAA,EAAA2B,IAAA5B,EAAA0D,EAAA3D,EAAAE,GAAAA,UAAAA,EAAAuD,oBAAApD,IAAAH,EAAAuD,OAAA,QAAAvD,EAAA2B,IAAAoC,IAAAA,UAAA5D,oCAAAA,eAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,GAAA,UAAAnB,EAAAkB,KAAA,OAAA1B,EAAAuD,OAAAvD,QAAAA,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAwD,SAAAvB,KAAAA,EAAAvB,IAAAA,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA4C,MAAAtD,EAAAF,EAAAkE,YAAAtD,EAAAH,MAAAP,EAAAiE,KAAAnE,EAAAoE,QAAA,WAAAlE,EAAAuD,SAAAvD,EAAAuD,OAAAvD,OAAAA,EAAA2B,IAAA5B,GAAAC,EAAAwD,SAAAvB,KAAAA,GAAAvB,GAAAV,EAAAuD,OAAA,QAAAvD,EAAA2B,IAAA,IAAAoC,UAAA/D,oCAAAA,EAAAwD,SAAAvB,KAAAA,YAAAkC,EAAApE,GAAAD,IAAAA,EAAAsE,CAAAA,OAAArE,EAAA,IAAA,KAAAA,IAAAD,EAAAuE,SAAAtE,EAAAA,IAAAA,KAAAA,IAAAD,EAAAwE,WAAAvE,EAAA,GAAAD,EAAAyE,SAAAxE,EAAAyE,IAAAA,KAAAA,WAAAC,KAAA3E,EAAA,CAAA,SAAA4E,EAAA3E,GAAAD,IAAAA,EAAAC,EAAA4E,YAAA,CAAA,EAAA7E,EAAA4B,KAAA5B,gBAAAA,EAAA6B,IAAA5B,EAAA4E,WAAA7E,CAAA,CAAA,SAAAyB,EAAAxB,QAAAyE,WAAA,CAAA,CAAAJ,OAAA,SAAArE,EAAA6C,QAAAuB,EAAA9B,MAAAA,KAAAuC,OAAA,EAAA,CAAA,SAAAnC,EAAA3C,MAAAA,GAAA,KAAAA,EAAA,CAAA,IAAAE,EAAAF,EAAAY,GAAAV,GAAAA,EAAAA,OAAAA,EAAA4B,KAAA9B,GAAA,GAAA,mBAAAA,EAAAmE,KAAAnE,OAAAA,EAAA+E,IAAAA,MAAA/E,EAAAgF,QAAA,CAAA,IAAAzE,GAAA,EAAAG,EAAA,SAAAyD,IAAA5D,OAAAA,EAAAP,EAAAgF,WAAA3E,EAAAyB,KAAA9B,EAAAO,GAAA4D,OAAAA,EAAA1D,MAAAT,EAAAO,GAAA4D,EAAAX,MAAA,EAAAW,EAAAA,OAAAA,EAAA1D,MAAAR,EAAAkE,EAAAX,MAAA,EAAAW,CAAA,EAAA,OAAAzD,EAAAyD,KAAAzD,CAAAuD,CAAAA,CAAAA,MAAAA,IAAAA,UAAAf,EAAAlD,GAAA,mBAAA,CAAA,OAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAqC,iBAAAnC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA5B,cAAAA,CAAAA,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA6C,YAAA/D,EAAAmB,EAAArB,EAAAhB,qBAAAA,EAAAkF,oBAAA,SAAAjF,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAkF,YAAAnF,QAAAA,IAAAA,IAAAoC,GAAA,uBAAApC,EAAAiF,aAAAjF,EAAAoF,MAAApF,EAAAA,EAAAqF,KAAA,SAAApF,GAAA,OAAAE,OAAAmF,eAAAnF,OAAAmF,eAAArF,EAAAoC,IAAApC,EAAAsF,UAAAlD,EAAAnB,EAAAjB,EAAAe,wBAAAf,EAAAG,UAAAD,OAAAoB,OAAAqB,GAAA3C,CAAAD,EAAAA,EAAAwF,MAAA,SAAAvF,GAAA,MAAA,CAAAmD,QAAAnD,EAAA4C,EAAAA,EAAAG,EAAA5C,WAAAc,EAAA8B,EAAA5C,UAAAU,GAAA,WAAA,OAAAyB,IAAA,IAAAvC,EAAAgD,cAAAA,EAAAhD,EAAAyF,MAAAxF,SAAAA,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAAgF,SAAA9E,IAAAA,MAAAoC,EAAA1B,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,UAAAV,EAAAkF,oBAAAhF,GAAAU,EAAAA,EAAAuD,OAAAd,eAAApD,GAAA,OAAAA,EAAAuD,KAAAvD,EAAAQ,MAAAG,EAAAuD,WAAAtB,EAAAD,GAAA1B,EAAA0B,EAAA5B,EAAAE,aAAAA,EAAA0B,EAAAhC,GAAA,WAAA,OAAA2B,IAAA,IAAArB,EAAA0B,EAAA,YAAA,WAAA,MAAA,oBAAA,IAAA5C,EAAA2F,KAAA1F,SAAAA,GAAAD,IAAAA,EAAAG,OAAAF,GAAAC,EAAA,GAAA,IAAA,IAAAG,KAAAL,EAAAE,EAAAyE,KAAAtE,GAAAH,OAAAA,EAAA0F,UAAAzB,SAAAA,SAAAjE,EAAA8E,QAAA,CAAA,IAAA/E,EAAAC,EAAA2F,MAAA5F,GAAAA,KAAAD,SAAAmE,EAAA1D,MAAAR,EAAAkE,EAAAX,MAAAW,EAAAA,CAAAA,CAAAA,OAAAA,EAAAX,MAAA,EAAAW,CAAA,CAAA,EAAAnE,EAAA2C,OAAAA,EAAAlB,EAAArB,WAAA+E,YAAA1D,EAAAqD,MAAA,SAAA9E,GAAA,GAAAuC,KAAAuD,KAAA,EAAAvD,KAAA4B,KAAA,EAAA5B,KAAAqB,KAAAC,KAAAA,MAAA5D,EAAAuD,KAAAA,aAAAE,SAAA,KAAAnB,KAAAkB,OAAA,OAAAlB,KAAAV,IAAA5B,EAAAyE,KAAAA,WAAA5B,QAAA8B,IAAA5E,EAAA,IAAA,IAAAE,KAAAqC,KAAA,MAAArC,EAAA6F,OAAA1F,IAAAA,EAAAyB,KAAA5B,KAAAA,KAAA6E,OAAA7E,EAAA8F,MAAA,MAAAzD,KAAArC,GAAAD,EAAAgG,EAAAA,KAAAA,WAAAzC,KAAAA,MAAAvD,EAAAA,IAAAA,EAAAyE,KAAAA,WAAAG,GAAAA,wBAAA5E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAAqE,OAAAA,KAAAA,IAAApC,EAAAA,kBAAAA,SAAA9D,GAAAwD,GAAAA,KAAAA,KAAAxD,MAAAA,EAAAE,IAAAA,gBAAAiG,EAAA9F,EAAAE,GAAAK,OAAAA,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAAiE,KAAA9D,EAAAE,IAAAL,EAAAuD,OAAA,OAAAvD,EAAA2B,IAAA5B,KAAAM,UAAAA,EAAAgC,KAAAmC,WAAAM,OAAA,EAAAzE,GAAAA,IAAAA,EAAAG,CAAAA,IAAAA,EAAAgE,KAAAA,WAAAnE,GAAAK,EAAAF,EAAAmE,WAAAnE,GAAAA,SAAAA,EAAA4D,OAAA6B,OAAAA,YAAA5D,KAAAuD,MAAApF,EAAA4D,OAAA,CAAA,IAAAxD,EAAAT,EAAAyB,KAAApB,cAAAM,EAAAX,EAAAyB,KAAApB,EAAA,cAAA,GAAAI,GAAAE,EAAA,CAAA,GAAAN,EAAA6D,SAAAhC,KAAAuD,KAAAK,OAAAA,EAAAzF,EAAA6D,UAAA,GAAA,GAAA7D,EAAA8D,WAAAjC,KAAAuD,KAAAK,OAAAA,EAAAzF,EAAA8D,oBAAA1D,GAAA,GAAAJ,EAAA6D,SAAAhC,KAAAuD,KAAAK,OAAAA,EAAAzF,EAAA6D,sBAAAvD,EAAA,MAAAuC,MAAA,0CAAA,GAAA7C,EAAA8D,WAAAjC,KAAAuD,KAAAK,OAAAA,EAAAzF,EAAA8D,WAAA,CAAA,CAAA,CAAA,EAAAT,OAAA,SAAA9D,EAAAD,GAAA,IAAA,IAAAE,EAAAqC,KAAAmC,WAAAM,OAAA9E,EAAAA,GAAAA,IAAAA,EAAAK,CAAAA,IAAAA,OAAAmE,WAAAxE,GAAA,GAAA4F,KAAAA,MAAAvF,EAAA+D,QAAAjE,EAAAyB,KAAAvB,EAAA,eAAAA,EAAAiE,WAAAjC,KAAAuD,KAAApF,CAAAA,IAAAA,EAAAH,EAAAG,KAAAA,CAAAA,CAAAA,cAAAT,GAAA,aAAAA,IAAAD,GAAAU,EAAA4D,QAAA5D,EAAA8D,YAAAxE,IAAAU,EAAAE,MAAAA,IAAAA,EAAAF,EAAAA,EAAAmE,WAAA,CAAA,EAAA,OAAAjE,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA6B,KAAAkB,OAAA,OAAAlB,KAAA4B,KAAAzD,EAAA8D,WAAArC,QAAAiE,SAAAxF,EAAA,EAAAwF,SAAA,SAAAnG,EAAAD,GAAA,GAAA,UAAAC,EAAA2B,KAAA3B,MAAAA,EAAA4B,IAAA5B,MAAAA,UAAAA,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAAW,KAAA4B,KAAAlE,EAAA4B,IAAA5B,WAAAA,EAAA2B,MAAAW,KAAA2D,KAAA3D,KAAAV,IAAA5B,EAAA4B,IAAA4B,KAAAA,OAAAU,SAAAA,KAAAA,uBAAAlE,EAAA2B,MAAA5B,IAAAuC,KAAA4B,KAAAnE,GAAAmC,CAAAkE,EAAAA,gBAAApG,GAAAD,IAAAA,IAAAA,EAAA0E,KAAAA,WAAAM,OAAAhF,EAAAA,GAAAA,IAAAA,EAAAE,CAAAA,IAAAA,OAAAwE,WAAA1E,GAAA,GAAAE,EAAAsE,aAAAvE,EAAAmG,OAAAA,KAAAA,SAAAlG,EAAA2E,WAAA3E,EAAAuE,UAAAG,EAAA1E,GAAAiC,CAAAmE,CAAAA,EAAAA,eAAArG,GAAAD,IAAAA,IAAAA,EAAA0E,KAAAA,WAAAM,OAAA,EAAAhF,GAAA,IAAAA,EAAA,CAAA,IAAAE,EAAAwE,KAAAA,WAAA1E,GAAAE,GAAAA,EAAAoE,SAAArE,EAAA,CAAA,IAAAI,EAAAH,EAAA2E,WAAAxE,GAAAA,UAAAA,EAAAuB,UAAArB,EAAAF,EAAAwB,IAAA+C,EAAA1E,EAAAK,CAAAA,OAAAA,CAAAgD,CAAAA,CAAAA,MAAAA,gCAAAgD,cAAA,SAAAvG,EAAAE,EAAAG,GAAA,OAAAkC,KAAAmB,SAAA,CAAA7C,SAAA8B,EAAA3C,GAAAkE,WAAAhE,EAAAkE,QAAA/D,GAAA,SAAAkC,KAAAkB,SAAAlB,KAAAV,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,CAAA,SAAAwG,EAAAxG,EAAAE,GAAA,IAAAD,EAAAE,OAAAwF,KAAA3F,MAAAG,OAAAsG,sBAAA,CAAA,IAAAlG,EAAAJ,OAAAsG,sBAAAzG,GAAAE,IAAAK,EAAAA,EAAAmG,QAAAxG,SAAAA,GAAAC,OAAAA,OAAAwG,yBAAA3G,EAAAE,GAAAiB,UAAA,KAAAlB,EAAA0E,KAAAiC,MAAA3G,EAAAM,EAAA,CAAA,OAAAN,CAAA,CAAA,SAAA4G,EAAA7G,GAAA,IAAA,IAAAE,EAAAA,EAAA4G,UAAA9B,OAAA9E,EAAAA,IAAAD,CAAAA,IAAAA,QAAA6G,UAAA5G,GAAA4G,UAAA5G,MAAAA,EAAA,EAAAsG,EAAArG,OAAAF,IAAA,GAAA6C,SAAA5C,SAAAA,GAAA6G,EAAA/G,EAAAE,EAAAD,EAAAC,GAAA,IAAAC,OAAA6G,0BAAA7G,OAAA8G,iBAAAjH,EAAAG,OAAA6G,0BAAA/G,IAAAuG,EAAArG,OAAAF,IAAA6C,kBAAA5C,GAAAC,OAAAK,eAAAR,EAAAE,EAAAC,OAAAwG,yBAAA1G,EAAAC,cAAAF,CAAA,CAAA,SAAAkD,EAAA3C,GAAA,OAAA2C,EAAA,mBAAAvC,QAAAA,iBAAAA,OAAAE,kBAAAN,GAAA,cAAAA,CAAA,EAAA,SAAAA,GAAAA,OAAAA,GAAAI,mBAAAA,QAAAJ,EAAA4E,cAAAxE,QAAAJ,IAAAI,OAAAP,UAAA,gBAAAG,CAAA2C,EAAAA,EAAA3C,EAAA,CAAA,SAAA2G,EAAA7G,EAAAJ,EAAAD,EAAAE,EAAAK,EAAAK,EAAAE,GAAA,IAAA,IAAAJ,EAAAL,EAAAO,GAAAE,GAAAE,EAAAN,EAAAD,KAAA,CAAA,MAAAJ,GAAA,YAAAL,EAAAK,EAAAK,CAAAA,EAAA8C,KAAAvD,EAAAe,GAAA0E,QAAAvC,QAAAnC,GAAAqC,KAAAnD,EAAAK,EAAA,CAAA,SAAA4G,EAAA9G,GAAA,OAAA,WAAA,IAAAJ,EAAAsC,KAAAvC,EAAA8G,UAAA,OAAA,IAAApB,SAAA,SAAAxF,EAAAK,GAAA,IAAAK,EAAAP,EAAAuG,MAAA3G,EAAAD,GAAA,SAAAoH,EAAA/G,GAAA6G,EAAAtG,EAAAV,EAAAK,EAAA6G,EAAAC,EAAAhH,OAAAA,EAAAgH,CAAAA,SAAAA,EAAAhH,GAAA6G,EAAAtG,EAAAV,EAAAK,EAAA6G,EAAAC,EAAA,QAAAhH,EAAA,CAAA+G,OAAA,EAAA,GAAA,CAAA,CAAA,SAAAE,EAAAtH,EAAAE,WAAAD,EAAA,EAAAC,EAAA8E,OAAA/E,EAAAA,IAAAM,CAAAA,IAAAA,EAAAL,EAAAD,GAAAM,EAAAY,WAAAZ,EAAAY,aAAAZ,EAAAA,EAAAa,0BAAAb,IAAAA,EAAAc,UAAA,GAAAlB,OAAAK,eAAAR,EAAAuH,EAAAhH,EAAAiH,KAAAjH,EAAA,CAAA,CAAA,SAAAkH,EAAAzH,EAAAE,EAAAD,GAAA,OAAAC,GAAAoH,EAAAtH,EAAAI,UAAAF,GAAAD,GAAAqH,EAAAtH,EAAAC,GAAAE,OAAAK,eAAAR,EAAAqB,YAAAA,CAAAA,cAAArB,CAAA,CAAA,SAAA0H,EAAA9G,EAAAP,QAAAO,aAAAP,GAAA,MAAA,IAAA4D,UAAA,oCAAA,CAAA,SAAA0D,EAAA1H,EAAAM,EAAAP,GAAAO,OAAAA,EAAAqH,EAAArH,GAAA,SAAAN,EAAAD,MAAAA,IAAA,UAAAkD,EAAAlD,uBAAAA,GAAA,OAAAA,EAAAA,QAAAA,IAAAA,YAAAiE,UAAA,4DAAA,OAAA,SAAAjE,GAAA,QAAA,IAAAA,EAAA6H,MAAAA,IAAAA,mFAAA7H,CAAA,CAAA8H,CAAA7H,EAAA,CAAA8H,CAAA9H,EAAA+H,IAAAC,QAAAC,UAAA3H,EAAAP,GAAA,GAAA4H,EAAA3H,GAAAkF,aAAA5E,EAAAqG,MAAA3G,EAAAD,GAAA,CAAA,SAAAmI,EAAAlI,EAAAD,yBAAAA,GAAA,OAAAA,EAAA,MAAA,IAAAiE,UAAA,sDAAAhE,EAAAG,UAAAD,OAAAoB,OAAAvB,GAAAA,EAAAI,WAAA+E,YAAA,CAAA1E,MAAAR,EAAAoB,UAAA,EAAAD,cAAA,KAAAjB,OAAAK,eAAAP,EAAAoB,YAAAA,CAAAA,UAAArB,IAAAA,GAAAoI,EAAAnI,EAAAD,EAAA,CAAA,SAAAqI,EAAApI,GAAAC,IAAAA,qBAAAoI,IAAA,IAAAA,SAAAD,EAAAA,OAAAA,WAAApI,aAAAA,IAAA,SAAAA,GAAAsI,IAAAA,OAAAA,IAAAA,SAAAC,SAAA1G,KAAA7B,GAAAwI,QAAApI,gBAAAA,CAAAA,MAAAA,4BAAAJ,CAAA,CAAA,CAAAyI,CAAAzI,UAAAA,EAAA,GAAA,mBAAAA,EAAAgE,MAAAA,IAAAA,4EAAA/D,EAAA,CAAA,GAAAA,EAAAyI,IAAA1I,GAAA,OAAAC,EAAA0I,IAAA3I,GAAAC,EAAA2I,IAAA5I,EAAA6I,EAAAA,CAAAA,SAAAA,WAAA,SAAA7I,EAAAD,EAAAE,GAAA,GAAA8H,IAAA,OAAAC,QAAAC,UAAAtB,MAAAE,KAAAA,WAAAvG,IAAAA,SAAAA,EAAAoE,KAAAiC,MAAArG,EAAAP,GAAAsC,IAAAA,EAAArC,IAAAA,EAAA8I,KAAAnC,MAAA3G,EAAAM,IAAAL,OAAAA,GAAAkI,EAAA9F,EAAApC,EAAAE,WAAAkC,CAAA,CAAA0G,CAAA/I,EAAA6G,UAAAc,EAAArF,MAAA4C,YAAA2D,CAAAA,OAAAA,EAAA1I,UAAAD,OAAAoB,OAAAtB,EAAAG,UAAA+E,CAAAA,aAAA1E,MAAAqI,EAAA3H,cAAAE,UAAA,EAAAD,cAAAgH,KAAAA,EAAAU,EAAA7I,EAAAoI,EAAAA,EAAApI,EAAA,CAAA,SAAA+H,IAAA/H,IAAAA,IAAAA,GAAAgJ,QAAA7I,UAAA8I,QAAApH,KAAAmG,QAAAC,UAAAe,QAAAhJ,IAAAA,WAAAA,IAAAA,CAAAA,MAAAA,WAAA+H,EAAA,WAAA,QAAA/H,CAAA,IAAA,CAAA,SAAAmI,EAAAnI,EAAAD,UAAAoI,EAAAjI,OAAAmF,eAAAnF,OAAAmF,eAAAyD,OAAA9I,SAAAA,EAAAD,GAAAC,OAAAA,EAAAsF,UAAAvF,EAAAC,CAAAmI,EAAAA,EAAAnI,EAAAD,EAAA,CAAA,SAAA4H,EAAA3H,GAAA2H,OAAAA,EAAAzH,OAAAmF,eAAAnF,OAAAsC,eAAAsG,OAAA9I,SAAAA,GAAAA,OAAAA,EAAAsF,WAAApF,OAAAsC,eAAAxC,EAAA2H,EAAAA,EAAA3H,EAAA,CAAA,SAAA8G,EAAA/G,EAAAE,EAAAD,GAAAC,OAAAA,EAAAqH,EAAArH,MAAAF,EAAAG,OAAAK,eAAAR,EAAAE,EAAAO,CAAAA,MAAAR,EAAAkB,YAAAC,EAAAA,cAAAC,EAAAA,cAAArB,EAAAE,GAAAD,EAAAD,CAAA,CAAA,SAAAuH,EAAAtH,GAAAS,IAAAA,EAAA,SAAAT,EAAAC,gBAAAgD,EAAAjD,KAAAA,SAAAA,EAAA,IAAAD,EAAAC,EAAAU,OAAAwI,aAAA,QAAA,IAAAnJ,EAAA,CAAA,IAAAU,EAAAV,EAAA8B,KAAA7B,EAAAC,GAAAgD,WAAAA,GAAAA,UAAAA,EAAAxC,UAAAA,EAAA,MAAA,IAAAuD,UAAA/D,+CAAAA,CAAAA,OAAAA,WAAAA,EAAAkJ,OAAAC,QAAApJ,EAAA,CAAAqJ,CAAArJ,EAAA,UAAA,MAAA,UAAAiD,EAAAxC,GAAAA,EAAAA,EAAA,EAAA,UAGgB6I,IAAqB,IAAAC,EAEnC,GAAuB,oBAAZC,SAA2C,QAApBD,EAAIC,QAAQC,gBAAQ,IAAAF,GAAM,QAANA,EAAhBA,EAAkBG,YAAI,IAAAH,GAAtBA,EAAwBI,WAAW,OAAQ,CAC/E,IAAAC,EAOIC,QAAQ,UALHC,EAAWF,EAAlBG,MACUC,EAAcJ,EAAxBK,SACSC,EAAaN,EAAtBO,QACSC,EAAaR,EAAtBS,QACUC,EAAcV,EAAxBW,SAEFC,OAAOC,KAPWb,EAAhBa,KAQFD,OAAOL,QAAUD,EACjBM,OAAOH,QAAUD,EACjBI,OAAOD,SAAWD,EAClBE,OAAOT,MAAQD,EACfU,OAAOP,SAAWD,EAGtB,4FC8BEU,GAgBM,IAfNC,yDAeI,GAEJ,OAAOC,EAAYC,WAAAA,OACNC,mBAAmBJ,IAC9BC,EAEJ,iCCnCgB,WAoBR,IAnBNA,EAAA9D,UAAA9B,OAAA,QAAAgG,IAAAlE,UAAA,GAAAA,UAAA,GAmBI,GAEImE,EAA0CL,EAA1CK,OAAQC,EAAkCN,EAAlCM,QAASC,EAAyBP,EAAzBO,UAAWC,EAAcR,EAAdQ,UAE9BC,EAAmB,GAErBJ,GACFI,EAAO1G,KAAI,UAAAmG,OAAWC,mBAAmBE,KAG3C,OAAOJ,EAAY,GAAAC,OAPF,cAOcA,OAAGO,EAAOC,KAAK,MAAQ,CACpDJ,QAAAA,EACAC,UAAAA,EACAC,UAAAA,GAEJ,gBChDgB,WAgBR,IAfNR,EAAA9D,UAAA9B,OAAA,QAAAgG,IAAAlE,UAAA,GAAAA,UAAA,GAeI,GAEJ,OAAO+D,EAAa,eAAgBD,EACtC,mCC6DA,SC1EmCW,GAAA,OAAAC,GAAA5E,MAAArE,KAAAuE,UAAA,kCAiCnC,SCW4B2E,GAAA,OAAAC,GAAA9E,MAAArE,KAAAuE,UAAA,uBAkD5B,WC5EwC,OAAA6E,GAAA/E,MAAArE,KAAAuE,UAAA,ECxCjC,IAAM8E,EAAc,CACzBC,OAAQ,IACRC,WAAY,wEASDC,EAAe,CAC1BF,OAAQ,IACRG,KAAI,sMAIOC,EAAY,CACvBJ,OAAQ,IACRC,WAAY,8BAUDI,EAAY,CACvBL,OAAQ,KAUGM,EAAoB,CAC/BC,QAAS,IAAI9D,IAAI,CAAC,CAAC,cAAe,OAClCuD,OAAQ,IACRG,KAAM,CACJK,WAAY,IACZC,QAAS,oDCpDb/C,IAEA,IAOagD,EAAeC,EAAAD,wBAAAE,GAQ1B,SAAAF,EACEG,EACAJ,EACA1B,GAAsB,IAAA+B,EAON,OAPMjF,OAAA6E,GAVxBxF,EAYE4F,EAAAhF,EAAApF,KAAAgK,EAAMD,CAAAA,EAAS1B,IAZjB,yBAAA,GAaE+B,EAAKvH,KAAOuH,EAAKxH,YAAYC,KAC7BuH,EAAKC,kBACmB,iBAAfF,EACHrD,OAAOwD,SAASH,EAAY,SAC5B1B,EAAU2B,wBAlBgBpJ,QAsBpC,SAASuJ,EAAiBC,GACxB,MAAAjC,0EAAAA,OAAiFiC,EAAK,IACxF,CAEA,SA2BsBlC,EAAYmC,GAAA,OAAAC,EAAArG,MAAArE,KAAAuE,UAAA,CRzClC,SAAAmG,IQuGA,ORvGAA,EAAA9F,EAAApH,IAAAsF,MQyCO,SAAA6H,EACLC,GAAgB,IAAAvC,EAAAwC,EAAAC,EAAAnC,EAAAC,EAAAC,EAAAgB,EAAAkB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAX,EAAAf,EAAAU,EAAAiB,EAAA7G,UAAA,OAAA/G,IAAAuB,MAAA,SAAAsM,GAAA,cAAAA,EAAA9H,KAAA8H,EAAAzJ,MAAA,KAAA,KAQA+G,OAAU,KAAZmC,GAPdzC,8BAKI,GAAA,IAEYM,SAAU,oCAAmCmC,EAAElC,EAAyBP,EAAzBO,UAAWC,EAAcR,EAAdQ,UACpEgB,EAAkC,CAAE,GADlCgB,EAAgFxC,EAAhFwC,UAINhB,EAAQ,gBAAkBgB,GAGxBhC,IACFgB,EAAQ,cAAgBhB,GAIrBA,GAAkC,oBAAdyC,UAAyB,CAAAD,EAAAzJ,KAAA,GAAA,KAAA,CAAA,OAAAyJ,EAAAzJ,KAAA,EACfuB,QAAAvC,UAAAE,MAAA,WAAA,OAAAyK,EAAA,IAE/B,KAAA,EAFYC,GAEZT,EAAAM,EAAAhK,MAFYmK,QAGd3B,EAAQ,cAAatB,GAAAA,OAHTwC,EAAJlI,KAGuB0F,KAAAA,OAAIiD,GAAS,KAAA,GAOO,OAJ/CP,EAAM3G,EAAA,CACVuF,QAAAA,GACIjB,EAAY,CAAE6C,OAAQC,YAAYC,QAAQ/C,IAAe,IAEzDsC,EAAG3C,GAAAA,OAAMI,EAAQiD,QAAQ,OAAQ,KAAGrD,OAAGqC,GAAQS,EAAAzJ,KAAA,GAC9B6F,MAAMyD,EAAKD,GAAO,KAAA,GAA3B,KAARE,EAAQE,EAAAhK,MAEDwK,GAAE,CAAAR,EAAAzJ,KAAA,GAAA,KAAA,CAAA,OAAAyJ,EAAA7J,OAAA,SAAS2J,EAASW,QAA0B,KAAA,GAAAT,EAAAU,GAEnDZ,EAAS7B,OAAM+B,EAAAzJ,KAAAyJ,EAAAU,KAChB1C,EAAYC,OAAM,GAAA+B,EAAAU,KAGlBvC,EAAaF,OAAM+B,GAAAA,EAAAU,KAInBrC,EAAUJ,OAAM+B,GAAAA,EAAAU,KAKhBpC,EAAUL,UAAM+B,EAAAU,KAGhBnC,EAAkBN,OAAM,GAAA,GAAA,MAAA,KAAA,GAAA,MAdjBtI,MAAMqI,EAAYE,YAAW,KAAA,GAAA,OAAA8B,EAAAzJ,KAAA,GAGjBuJ,EAASa,OAAM,KAAA,GAAxB,MACHhL,MADGqK,EAAAhK,MACW,KAAA,GAGoB,KAAtCmJ,EAAQW,EAAStB,QAAQxD,IAAI,WAC1B,CAAAgF,EAAAzJ,KAAA,GAAA,KAAA,CAAA,MAAYZ,MAAMuJ,EAAiBC,IAAO,KAAA,GAAA,MACzCxJ,MAAM0I,EAAUH,YAAW,KAAA,GAAA,OAAA8B,EAAA7J,OAAA,SAG9B,MAAI,KAAA,GAAA,OAAA6J,EAAAzJ,KAAA,GAGSuJ,EAASW,OAAM,KAAA,GACmB,MADhDrC,EAAI4B,EAAAhK,KACJ8I,EAAagB,EAAStB,QAAQxD,IAAI,eAClC,IAAI2D,EAAeG,EAAYV,EAAKM,SAAQ,KAAA,GAAA,MAGxC/I,MAAMmK,EAAS5B,YAAW,KAAA,GAAA,IAAA,MAAA,OAAA8B,EAAA3H,OAAA,GAAAiH,EAAA,KAG1CD,EAAArG,MAAArE,KAAAuE,UAAA,UCvDgB0H,EACdC,GAiCM,IAhCN7D,yDAgCI,GAGFwC,EAOExC,EAPFwC,OACAnC,EAMEL,EANFK,OAAMyD,EAMJ9D,EALF+D,kBAAAA,OAAoB,IAAHD,GAAOA,EACxBvD,EAIEP,EAJFO,UAASyD,EAIPhE,EAHFiE,SAAAA,OAAW,IAAHD,GAAOA,EACf1D,EAEEN,EAFFM,QACAE,EACER,EADFQ,UAEI+B,sBAAQrC,OAAuBC,mBAAmB0D,GAAW,KAC7DpD,EAAmB,GAczB,OAZIJ,GACFI,EAAO1G,KAAI,UAAAmG,OAAWC,mBAAmBE,KAGtC0D,GACHtD,EAAO1G,KAAK,2BAGTkK,GACHxD,EAAO1G,KAAK,0BAGPkG,EAAY,GAAAC,OAAIqC,GAAQrC,OAAGO,EAAOC,KAAK,MAAQ,CACpD8B,OAAAA,EACAlC,QAAAA,EACAC,UAAAA,EACAC,UAAAA,GAEJ,UC9EgB0D,EACdC,GAoBM,IAnBNnE,yDAmBI,GAEJ,OAAOC,EAAYC,iBAAAA,OAAkBC,mBAAmBgE,IAAUnE,EAGpE,CChFA,IAAM3K,EAAE,mEAAmEC,EAAE,gDAAgDG,EAAE,+CAA+C,SAASK,EAAET,EAAEC,EAAEG,EAAEK,GAAG,IAAIV,EAAEkC,EAAE3B,EAAQwB,EAAE7B,GAAG,CAAC,GAAGc,GAAGX,EAAEA,GAAG,KAAK,EAAE4B,GAAI,IAAGvB,EAAE,EAAE,EAAE,IAAIV,EAAE,EAAIC,EAAE+E,OAAJhF,EAAWA,GAAG,GAAQkC,GAAN3B,EAAEP,EAAEgB,KAAQ,IAAEe,EAAEiD,QAAWjD,EAAE4C,KAAK,GAAG5C,EAAEG,IAAIjC,EAAED,IAAI,GAAGiC,EAAEvB,GAAGH,EAAE,IAAI,MAAM,CAACE,MAAMsB,EAAEiN,OAAO,EAAE/O,EAAE+E,OAAO3E,EAAE,CAAC,SAASL,EAAEA,EAAEkC,EAAE3B,GAAG,OAAO2B,GAAG,IAAI,OAAO,IAAI,UAAU,IAAI,UAAU,MAAM,QAAQ,MAAUqB,MAAM,8CAA8C,OAAOvD,GAAG,IAAI,MAAM,OAAO,SAASC,EAAEC,EAAEG,GAAG,OAAO,SAASJ,EAAEC,EAAEG,EAAEK,GAAG,IAAIV,EAAEkC,EAAE3B,EAAEwB,EAAE,GAAG,GAAG9B,EAAE+E,OAAO,EAAE,MAAUzB,MAAM,iDAAiD,IAAMvC,EAAEd,GAAG,CAAC,GAAG+B,GAAG5B,EAAEA,GAAG,KAAK,EAAES,GAAI,IAAGJ,EAAE,EAAE,EAAE,IAAIV,EAAE,EAAIC,EAAE+E,OAAJhF,EAAWA,GAAG,EAAE,CAAC,GAAGkC,EAAE2K,SAAS5M,EAAEgP,OAAOjP,EAAE,GAAG,IAAI+E,MAAM7C,GAAG,MAAUqB,MAAM,kDAAkD,IAAgBhD,GAAZwB,GAAG/B,IAAI,GAAGiC,KAAQ,EAAY1B,GAAVS,EAAEgE,QAAWhE,EAAE2D,KAAK,GAAG3D,EAAET,IAAI2B,GAAG,GAAGpB,EAAEJ,GAAGqB,EAAE,GAAG,CAAC,MAAM,CAACtB,MAAMO,EAAEgO,OAAO,EAAE/O,EAAE+E,OAAO3E,EAAE,CAAxY,CAA0YJ,EAAEC,EAAEG,EAAEE,EAAE,EAAE,IAAI,OAAO,OAAO,SAASN,EAAEC,EAAEG,GAAG,OAAO,SAASJ,EAAEC,EAAEG,EAAEK,EAAEV,GAAG,IAAIkC,EAAE3B,EAAEwB,EAAEf,EAAEiB,EAAEnB,EAAEF,EAAEsO,EAAEC,EAAE,EAAQnN,EAAE3B,GAAG,CAAC,GAAG+O,GAAG1O,EAAEA,GAAG,KAAK,EAAE,GAAG,SAASR,EAAE,IAAIU,GAAE,IAAKZ,EAAE,EAAE,EAAE+B,EAAE,EAAI9B,EAAE+E,OAAJjD,EAAWA,GAAG,EAAE,IAAsBxB,EAAE,GAAG,KAAvB2B,EAAEjC,EAAEoP,WAAWtN,IAAcxB,EAAEoE,KAAKzC,GAAG,KAAKA,GAAG3B,EAAEoE,KAAK,IAAIzC,IAAI,GAAG3B,EAAEoE,KAAK,IAAI,GAAGzC,IAAI,MAAMA,GAAUA,GAAP,MAAS3B,EAAEoE,KAAK,IAAIzC,IAAI,GAAG,IAAIA,IAAI,EAAE,GAAG,IAAI,GAAGA,IAASA,EAAE,QAAQ,KAAKA,IAAI,GAAG,KAAKjC,EAAEoP,WAAlCtN,GAAG,IAA8CxB,EAAEoE,KAAK,IAAIzC,IAAI,GAAG,IAAIA,IAAI,GAAG,GAAG,IAAIA,IAAI,EAAE,GAAG,IAAI,GAAGA,IAAIlB,EAAE,EAAIT,EAAEyE,OAAJhE,EAAWA,GAAG,EAAE,CAAC,IAAUiB,GAANnB,EAAEqO,EAAEC,KAAQ,EAAYnN,GAAVD,EAAEgD,QAAWhD,EAAE2C,KAAK,GAAG3C,EAAEC,IAAI1B,EAAES,IAAI,GAAGJ,EAAEZ,GAAGc,EAAE,IAAIqO,GAAG,CAAC,MAAM,IAAIvO,GAAE,IAAKZ,EAAE,EAAE,EAAEkP,EAAE,YAAYhP,GAAG,IAAIF,GAAG,YAAYE,GAAG,IAAIF,EAAE+B,EAAE,EAAI9B,EAAE+E,OAAJjD,EAAWA,GAAG,EAAE,CAAC,IAAIG,EAAEjC,EAAEoP,WAAWtN,IAAG,IAAKmN,IAAYhN,GAARlB,EAAE,IAAIkB,IAAO,EAAEA,IAAI,GAASD,GAANnB,EAAEqO,EAAEC,KAAQ,EAAYnN,GAAVD,EAAEgD,QAAWhD,EAAE2C,KAAK,GAAG3C,EAAEC,IAAIC,GAAG,GAAGtB,EAAEZ,GAAGc,EAAE,IAAIqO,GAAG,CAAC,CAAC,MAAM,CAAC1O,MAAMuB,EAAEgN,OAAO,EAAEG,EAAEzO,EAAE,CAAhsB,CAAksBT,EAAEiC,EAAEhC,EAAEG,EAAEE,EAAE,EAAE,IAAI,MAAM,OAAO,SAASL,EAAEG,EAAEK,GAAG,OAAO,SAASR,EAAEG,EAAEK,EAAEV,GAAG,IAAMO,EAAEwB,EAAEf,EAAEiB,EAAEnB,EAAEF,EAAEsO,EAAE,EAAQC,EAAE9O,GAAG,CAAC,GAAG2B,GAAGtB,EAAEA,GAAG,KAAK,EAAE0O,GAAE,IAAKpP,EAAE,EAAE,EAAEsC,EAAEpC,EAAEuI,QAAQ,KAAK,IAAG,IAAKvI,EAAEoP,OAAO,qBAAqB,MAAU/L,MAAM,uCAAuC,GAAGrD,EAAEA,EAAEiO,QAAQ,KAAK,KAAI,IAAK7L,GAAKpC,EAAE8E,OAAJ1C,EAAW,MAAUiB,MAAM,uCAAuC,IAAIhD,EAAE,EAAIL,EAAE8E,OAAJzE,EAAWA,GAAG,EAAE,CAAC,IAAI0B,EAAE/B,EAAE+O,OAAO1O,EAAE,GAAGS,EAAE,EAAEe,EAAE,EAAIE,EAAE+C,OAAJjD,EAAWA,GAAG,EAA2Bf,GAAvBf,EAAEwI,QAAQxG,EAAE8D,OAAOhE,KAAU,GAAG,EAAEA,EAAE,IAAIA,EAAE,EAAIE,EAAE+C,OAAO,EAAXjD,EAAaA,GAAG,EAAE,CAAC,IAAUjB,GAANF,EAAEsO,EAAElN,KAAQ,EAAYlB,GAAVqO,EAAEnK,QAAWmK,EAAExK,KAAK,GAAGwK,EAAErO,KAAKE,IAAI,GAAG,EAAEe,EAAE,MAAM,GAAGqN,EAAEpP,GAAGY,EAAE,IAAIsO,GAAG,CAAC,CAAC,CAAC,MAAM,CAACzO,MAAM0O,EAAEH,OAAO,EAAEE,EAAExO,EAAE,CAA1hB,CAA4hBR,EAAEG,EAAEK,EAAEH,EAAE,EAAE,IAAI,QAAQ,OAAO,SAASN,EAAEC,EAAEG,GAAG,OAAO,SAASJ,EAAEC,EAAEG,EAAEK,GAAG,IAAIV,EAAEkC,EAAE3B,EAAEwB,EAAQf,EAAEd,GAAG,CAAC,GAAG+B,GAAG5B,EAAEA,GAAG,KAAK,EAAES,GAAE,IAAKJ,EAAE,EAAE,EAAE,IAAIwB,EAAE,EAAIjC,EAAE+E,OAAJ9C,EAAWA,GAAG,EAAElC,EAAEC,EAAEoP,WAAWnN,IAAS3B,GAANwB,EAAEG,EAAED,KAAQ,IAAEjB,EAAEgE,QAAWhE,EAAE2D,KAAK,GAAG3D,EAAET,IAAIP,GAAG,GAAGc,EAAEJ,GAAGqB,EAAE,IAAI,MAAM,CAACtB,MAAMO,EAAEgO,OAAO,EAAE/O,EAAE+E,OAAO3E,EAAE,CAAlN,CAAoNJ,EAAEC,EAAEG,EAAEE,EAAE,EAAE,IAAI,cAAc,IAAI,IAAIgP,YAAY,EAAE,CAAC,MAAMtP,GAAG,MAAUsD,MAAMrD,EAAE,CAAC,OAAO,SAASD,EAAEC,EAAEG,GAAG,OAAO,SAASJ,EAAEC,EAAEG,EAAEL,GAAG,OAAOU,EAAE,IAAI8O,WAAWvP,GAAGC,EAAEG,EAAEL,EAAE,CAAnD,CAAqDC,EAAEC,EAAEG,EAAEE,EAAE,EAAE,IAAI,aAAa,IAAI,IAAIiP,WAAW,EAAE,CAAC,MAAMvP,GAAG,MAAUsD,MAAMlD,EAAE,CAAC,OAAO,SAASJ,EAAEC,EAAEG,GAAG,OAAOK,EAAET,EAAEC,EAAEG,EAAEE,EAAE,EAAE,QAAQ,MAAUgD,MAAM,oEAAoE,CAAC,SAASrB,EAAExB,EAAEV,EAAEkC,EAAE3B,GAAG,OAAOG,GAAG,IAAI,MAAM,OAAO,SAAST,GAAG,OAAO,SAASA,EAAEC,EAAEG,EAAEK,GAAG,IAA+BwB,EAAE3B,EAA3BP,EAAE,mBAA2B+B,EAAE,GAASf,EAAEd,EAAE,EAAE+B,GAAI,IAAG5B,EAAE,EAAE,EAAE,IAAI6B,EAAE,EAAIlB,EAAFkB,EAAIA,GAAG,EAA6BH,GAAG/B,EAAE+F,QAAhCxF,EAAEN,EAAEiC,IAAI,KAAK,GAAGD,EAAE5B,GAAG6B,EAAE,OAAoB,EAAE,IAAIlC,EAAE+F,OAAO,GAAGxF,GAAG,OAAOG,EAAE+O,YAAY1N,EAAE2N,cAAc3N,CAAC,CAA1M,CAA4M9B,EAAED,EAAEkC,EAAE3B,EAAE,EAAE,IAAI,MAAM,OAAO,SAASL,GAAG,OAAO,SAASA,EAAEG,EAAEK,EAAEV,GAAG,IAAIkC,EAAE3B,EAAEwB,EAAMjB,EAAE,GAASF,EAAEP,EAAE,EAAE6O,GAAE,IAAKxO,EAAE,EAAE,EAAE,IAAIwB,EAAE,EAAItB,EAAFsB,EAAIA,GAAG,EAAE,IAA8CH,GAAG7B,EAAEgC,IAAI,KAAK,GAAGgN,EAAExO,GAAGwB,EAAE,IAAI,MAAM,KAAtEtB,EAAJsB,EAAE,EAAIhC,EAAEgC,EAAE,IAAI,GAAG,KAAiE,GAAGgN,EAAExO,IAAIwB,EAAE,GAAG,IAAI,MAAM,GAAjFtB,EAAJsB,EAAE,EAAIhC,EAAEgC,EAAE,IAAI,GAAG,KAA0E,GAAGgN,EAAExO,IAAIwB,EAAE,GAAG,IAAI,IAAI3B,EAAE,EAAI,EAAFA,EAAIA,GAAG,EAAEO,GAAG,EAAEoB,EAAE,EAAE3B,EAAGF,EAA2BL,EAAE2P,OAA3B1P,EAAE8F,OAAOhE,IAAI,GAAG,EAAExB,GAAG,IAAa,OAAOO,CAAC,CAAhS,CAAkSZ,EAAEF,EAAEkC,EAAE3B,EAAE,EAAE,IAAI,QAAQ,OAAO,SAASN,GAAG,OAAO,SAASA,EAAEC,EAAEG,GAAG,IAAIK,EAAIwB,EAAE,GAAS3B,EAAEL,EAAE,EAAE6B,GAAE,IAAK1B,EAAE,EAAE,EAAE,IAAIK,EAAE,EAAIH,EAAFG,EAAIA,GAAG,EAAiCwB,GAAGkH,OAAOwG,aAAvC3P,EAAES,IAAI,KAAK,GAAGqB,EAAE1B,GAAGK,EAAE,IAAI,KAA8B,OAAOwB,CAAC,CAAxI,CAA0IjC,EAAED,EAAEkC,EAAE,EAAE,IAAI,cAAc,IAAI,IAAIqN,YAAY,EAAE,CAAC,MAAMtP,GAAG,MAAUsD,MAAMrD,EAAE,CAAC,OAAO,SAASD,GAAG,OAAO,SAASA,EAAEC,EAAEG,GAAG,IAAIK,EAAQV,EAAEE,EAAE,EAAEgC,EAAE,IAAIqN,YAAYvP,GAAGO,EAAE,IAAIiP,WAAWtN,GAAGH,GAAE,IAAK1B,EAAE,EAAE,EAAE,IAAIK,EAAE,EAAIV,EAAFU,EAAIA,GAAG,EAAEH,EAAEG,GAAGT,EAAES,IAAI,KAAK,GAAGqB,EAAE1B,GAAGK,EAAE,IAAI,IAAI,OAAOwB,CAAC,CAAnJ,CAAqJjC,EAAED,EAAEkC,EAAE,EAAE,IAAI,aAAa,IAAI,IAAIsN,WAAW,EAAE,CAAC,MAAMvP,GAAG,MAAUsD,MAAMlD,EAAE,CAAC,OAAO,SAASJ,GAAG,OAAO,SAASA,EAAEC,EAAEG,GAAG,IAAIK,EAAQV,EAAEE,EAAE,EAAEgC,GAAE,IAAK7B,EAAE,EAAE,EAAEE,EAAE,IAAIiP,WAAWxP,GAAG,IAAIU,EAAE,EAAIV,EAAFU,EAAIA,GAAG,EAAEH,EAAEG,GAAGT,EAAES,IAAI,KAAK,GAAGwB,EAAE7B,GAAGK,EAAE,IAAI,IAAI,OAAOH,CAAC,CAA9H,CAAgIN,EAAED,EAAEkC,EAAE,EAAE,QAAQ,MAAUqB,MAAM,8DAA8D,CAAC,SAAShD,EAAEN,GAAG,IAAMC,EAAE,CAACuP,aAAY,EAAGE,OAAO,IAAIE,WAAU,GAAIxP,EAAEJ,GAAG,GAAGS,EAAE,wCAAwC,GAAGR,EAAEuP,YAAYpP,EAAEoP,cAAa,EAAGpP,EAAEsP,SAASzP,EAAEyP,OAAOtP,EAAEsP,QAAQtP,EAAEwP,UAAU,CAAC,GAAGxP,EAAEwP,UAAU,GAAG,EAAE,MAAUtM,MAAM7C,GAAGR,EAAE2P,UAAUxP,EAAEwP,SAAS,MAAM,GAAGxP,EAAEyP,SAAS,CAAC,GAAGzP,EAAEyP,SAAS,GAAG,EAAE,MAAUvM,MAAM7C,GAAGR,EAAE2P,UAAUxP,EAAEyP,QAAQ,CAAC,GAAG,kBAAkB5P,EAAEuP,YAAY,MAAUlM,MAAM,yCAAyC,GAAG,iBAAiBrD,EAAEyP,OAAO,MAAUpM,MAAM,oCAAoC,OAAOrD,CAAC,CAAC,IAAM6B,EAAC,WAA0T,OAAA0F,GAAzT,SAAA1F,EAAY9B,EAAEC,EAAEG,GAAEqH,OAAA3F,GAAC,IAAMrB,EAAEL,GAAG,CAAE,EAAC,GAAGkC,KAAKtC,EAAEC,EAAEqC,KAAK7B,EAAEA,EAAEqP,UAAU,OAAOxN,KAAKyN,UAAUtP,EAAEsP,WAAW,EAAEjL,MAAMxC,KAAKyN,YAAYzN,KAAKyN,YAAYnD,SAAStK,KAAKyN,UAAU,KAAK,EAAEzN,KAAKyN,UAAU,MAAUzM,MAAM,iCAAiChB,KAAKhC,EAAEN,EAAEsC,KAAKR,EAAE,GAAGQ,KAAKvB,EAAE,EAAEuB,KAAKP,GAAE,EAAGO,KAAK6M,EAAE,EAAE7M,KAAKD,GAAE,EAAGC,KAAK0N,EAAE,GAAG1N,KAAK2N,EAAE,EAAE,GAAC,CAAA,CAAA1I,IAAA,SAAA/G,MAAA0P,SAAOlQ,GAAG,IAAIC,EAAEG,EAAE,EAAQK,EAAE6B,KAAK6N,IAAI,EAAEpQ,EAAEuC,KAAK8N,EAAEpQ,EAAEsC,KAAKR,EAAEQ,KAAKvB,GAAGkB,EAAElC,EAAEgP,OAAOzO,EAAEP,EAAES,MAAMsB,EAAEG,IAAI,EAAE,IAAIhC,EAAE,EAAI6B,EAAF7B,EAAIA,GAAGQ,EAAYwB,GAAV7B,EAAEkC,KAAK6N,IAAO7N,KAAK+N,EAAE/N,KAAKK,EAAErC,EAAEyF,MAAM9F,EAAEA,EAAEQ,GAAG6B,KAAK+N,GAAGjQ,GAAGkC,KAAK6N,GAAG,OAAO7N,KAAK6M,GAAG/O,EAAEkC,KAAKR,EAAExB,EAAEyF,MAAM3F,IAAI,GAAGkC,KAAKvB,EAAEkB,EAAEK,KAAK6N,EAAE7N,KAAKP,GAAE,EAAGO,IAAI,GAAC,CAAAiF,IAAA,UAAA/G,eAAQR,EAAEC,GAAG,IAAIG,EAAEK,EAAEV,EAAEuC,KAAKgO,EAAQxO,EAAExB,EAAEL,GAAG,GAAGqC,KAAKG,EAAE,CAAC,IAAG,IAAKX,EAAE8N,UAAU,MAAUtM,MAAM,8CAA8CvD,EAAE+B,EAAE8N,SAAS,CAAC,IAAM7O,EAAEkB,EAAEjC,EAAED,EAAEuC,KAAKiO,EAAEzO,GAAG,GAAGQ,KAAKD,GAAGC,KAAKkO,EAAE,OAAOzP,EAAEuB,KAAKkO,EAAE1O,IAAI,IAAIrB,EAAE6B,KAAKmO,EAAEnO,KAAKR,EAAEiE,QAAQzD,KAAKvB,EAAEuB,KAAK6M,EAAE7M,KAAKoO,EAAEpO,KAAK+N,GAAGtQ,GAAGK,EAAE,EAAIkC,KAAKyN,UAAP3P,EAAiBA,GAAG,EAAEkC,KAAKG,GAAG1C,EAAE,IAAI,IAAIU,EAAEA,EAAEsE,OAAO,IAAI,WAAW,GAAGhF,EAAE,IAAIU,EAAE6B,KAAKmO,EAAEhQ,EAAEV,EAAE,EAAEuC,KAAKqO,EAAErO,KAAKhC,GAAGP,GAAG,OAAOgB,EAAEN,EAAE,GAAC,CAAA8G,IAAA,aAAA/G,MAAA,SAAWR,EAAEC,EAAEG,GAAG,IAAIkC,KAAKsO,EAAE,MAAUtN,MAAM,iCAAiC,GAAGhB,KAAKP,EAAE,MAAUuB,MAAM,2CAA2C,IAAM7C,EAAEV,EAAEE,GAAGG,GAAG,CAAA,GAAI0P,UAAU,OAAOxN,KAAKiO,GAAGjO,KAAKuO,EAAEpQ,EAAET,GAAG,GAAC,CAAAuH,IAAA,IAAA/G,MAAAqQ,SAAE7Q,GAAG,IAA+BS,EAAzBR,EAAEqC,KAAK6N,IAAI,EAAE/P,EAAEH,EAAE,EAAE,EAAQ,GAAG,IAAIqC,KAAKyN,UAAU,MAAUzM,MAAM,iCAAiC,GAAGhB,KAAKD,EAAE,MAAUiB,MAAM,uBAAuB,IAAMtD,EAAE+O,OAAO,EAAX9O,IAAeD,EAAEQ,MAAM8B,KAAKmO,EAAEzQ,EAAEQ,MAAMR,EAAE+O,OAAO,EAAEzM,KAAKqO,EAAErO,KAAKhC,GAAGgC,KAAKgO,IAAoBlQ,GAAhBJ,EAAEQ,MAAMuE,QAAW/E,EAAEQ,MAAMkE,KAAK,GAAG,IAAIjE,EAAE,EAAKL,GAAHK,EAAKA,GAAG,EAAE6B,KAAK0N,EAAEvP,GAAG,UAAUT,EAAEQ,MAAMC,GAAG6B,KAAK2N,EAAExP,GAAG,WAAWT,EAAEQ,MAAMC,GAAG6B,KAAK+N,EAAE/N,KAAKK,EAAEL,KAAK0N,EAAE1N,KAAK+N,GAAG/N,KAAK6M,EAAE7M,KAAK6N,EAAE7N,KAAKD,GAAE,CAAE,GAAC,CAAAkF,IAAA,UAAA/G,eAAQR,EAAEC,GAAG,IAAMG,EAAEE,EAAEL,GAAG,OAAOgC,EAAEjC,EAAEsC,KAAKgO,EAAEhO,KAAKiO,EAAEnQ,EAAlB6B,CAAqBK,KAAKwO,IAAI,GAAC,CAAAvJ,IAAA,IAAA/G,MAAA,WAAI,IAAIR,EAAE,IAAIsC,KAAKD,EAAE,MAAUiB,MAAM,qDAAqD,IAAMrD,EAAEqC,KAAKmO,EAAEnO,KAAKR,EAAEiE,QAAQzD,KAAKvB,EAAEuB,KAAK6M,EAAE7M,KAAKoO,EAAEpO,KAAK+N,GAAG/N,KAAKgO,GAAG,OAAOtQ,EAAEsC,KAAKK,EAAEL,KAAK2N,EAAE3N,KAAKqO,EAAErO,KAAKhC,IAAIN,EAAEsC,KAAKmO,EAAExQ,EAAEqC,KAAKgO,EAAEhO,KAAK6N,EAAEnQ,EAAEsC,KAAKgO,EAAI,IAAC,CAAn0D,GAAo0D,SAASvP,EAAEf,EAAEC,GAAG,OAAOD,GAAGC,EAAED,IAAI,GAAGC,CAAC,CAAC,SAAS+B,EAAEhC,EAAEC,EAAEG,GAAG,OAAOJ,EAAEC,EAAEG,CAAC,CAAC,SAASS,EAAEb,EAAEC,EAAEG,GAAG,OAAOJ,EAAEC,EAAED,EAAEI,EAAEH,EAAEG,CAAC,CAAC,SAASO,EAAEX,EAAEC,GAAG,IAAMG,GAAG,MAAMJ,IAAI,MAAMC,GAAG,OAAO,OAAOD,IAAI,KAAKC,IAAI,KAAKG,IAAI,MAAM,GAAG,MAAMA,CAAC,CAAC,SAAS6O,EAAEjP,EAAEC,EAAEG,EAAEK,EAAEV,GAAG,IAAMkC,GAAG,MAAMjC,IAAI,MAAMC,IAAI,MAAMG,IAAI,MAAMK,IAAI,MAAMV,GAAG,OAAO,OAAOC,IAAI,KAAKC,IAAI,KAAKG,IAAI,KAAKK,IAAI,KAAKV,IAAI,KAAKkC,IAAI,MAAM,GAAG,MAAMA,CAAC,CAAC,SAASiN,EAAElP,GAAG,MAAM,CAAC,WAAW,WAAW,WAAW,UAAU,WAAW,CAAC,SAAS+B,EAAE/B,EAAEC,GAAG,IAAIG,EAAEK,EAAEV,EAAEkC,EAAE3B,EAAEwB,EAAEoN,EAA2TC,EAAnTpN,EAAE,GAAG,IAAI3B,EAAEH,EAAE,GAAGQ,EAAER,EAAE,GAAGF,EAAEE,EAAE,GAAGgC,EAAEhC,EAAE,GAAGK,EAAEL,EAAE,GAAGiP,EAAE,EAAI,GAAFA,EAAKA,GAAG,EAAEnN,EAAEmN,GAAK,GAAFA,EAAKlP,EAAEkP,GAAGnO,EAAEgB,EAAEmN,EAAE,GAAGnN,EAAEmN,EAAE,GAAGnN,EAAEmN,EAAE,IAAInN,EAAEmN,EAAE,IAAI,GAAGpN,EAAI,GAAFoN,EAAKD,EAAElO,EAAEX,EAAE,IAAI+O,EAAE1O,GAAGV,GAAGoP,EAAElN,EAAE3B,EAAE,WAAWyB,EAAEmN,IAAM,GAAFA,EAAKD,EAAElO,EAAEX,EAAE,GAAG4B,EAAEvB,EAAEV,EAAEkC,GAAG3B,EAAE,WAAWyB,EAAEmN,IAAM,GAAFA,EAAKD,EAAElO,EAAEX,EAAE,GAAGS,EAAEJ,EAAEV,EAAEkC,GAAG3B,EAAE,WAAWyB,EAAEmN,IAAID,EAAElO,EAAEX,EAAE,GAAG4B,EAAEvB,EAAEV,EAAEkC,GAAG3B,EAAE,WAAWyB,EAAEmN,IAAI5O,EAAE2B,EAAEA,EAAElC,EAAEA,EAAEgB,EAAEN,EAAE,IAAIA,EAAEL,EAAEA,EAAE0B,EAAQ,OAAO7B,EAAE,GAAGU,EAAEP,EAAEH,EAAE,IAAIA,EAAE,GAAGU,EAAEF,EAAER,EAAE,IAAIA,EAAE,GAAGU,EAAEZ,EAAEE,EAAE,IAAIA,EAAE,GAAGU,EAAEsB,EAAEhC,EAAE,IAAIA,EAAE,GAAGU,EAAEL,EAAEL,EAAE,IAAIA,CAAC,CAAC,SAASkP,EAAEnP,EAAEC,EAAEG,EAAEK,GAAwC,IAArC,IAAIV,EAAQkC,EAAE,IAAIhC,EAAE,KAAK,GAAG,GAAGK,EAAEL,EAAEG,EAAiB6B,GAAVjC,EAAE+E,QAAW/E,EAAE0E,KAAK,GAAG,IAAI1E,EAAEC,IAAI,IAAI,KAAK,GAAGA,EAAE,GAAGD,EAAEiC,GAAG,WAAW3B,EAAEN,EAAEiC,EAAE,GAAG3B,EAAE,WAAW,EAAEP,EAAE,EAAIC,EAAE+E,OAAJhF,EAAWA,GAAG,GAAGU,EAAEsB,EAAE/B,EAAE+F,MAAMhG,EAAEA,EAAE,IAAIU,GAAG,OAAOA,CAAC,CAAC,IAAM4B,WAAC0O,GAAW,SAAA1O,EAAYrC,EAAEC,EAAEG,GAAE,IAAA4Q,EAAC,GAADvJ,OAAApF,GAAI,UAAUrC,EAAE,MAAUsD,MAAM,uCAAoD,IAAM7C,EAAEL,GAAG,CAAE,EAA2d,OAArf4Q,EAAAtJ,EAAArF,KAAAA,GAAMrC,EAAEC,EAAEG,KAAsBwQ,GAAE,EAAGI,EAAKR,EAAEQ,EAAKF,EAAEE,EAAKT,GAAI,EAACS,EAAKZ,EAAErQ,EAAEiR,EAAKhR,EAAEgR,EAAKvQ,EAAEuQ,EAAKT,GAAGS,EAAKrO,EAAEZ,EAAEiP,EAAKN,EAAE,SAAS1Q,GAAG,OAAOA,EAAE+F,OAAO,EAAEiL,EAAKL,EAAEzB,EAAE8B,EAAKP,EAAEtB,EAAE6B,EAAKX,EAAE,CAAC,WAAW,WAAW,WAAW,UAAU,YAAYW,EAAKb,EAAE,IAAIa,EAAKV,EAAE,IAAIU,EAAKvO,GAAE,EAAGhC,EAAEwQ,SAASD,EAAKH,EAAE,SAAS7Q,EAAEC,EAAEG,EAAEK,GAAG,IAAMwB,EAAEjC,0CAAqC,IAAIC,EAAS,MAAUqD,MAAMrB,GAAY,QAAG8I,IAAS9K,EAAEO,QAAQP,EAAEiR,OAAO,MAAU5N,MAAMrB,GAAG,OAAOlC,EAAEE,EAAEiR,OAAOjR,EAAE6P,UAAU,OAAO1P,EAA9BL,CAAiCE,EAAEO,MAAM,CAA1M,CAA4M,EAAUC,EAAEwQ,QAAQD,EAAKT,IAAGS,CAAA,CAAC,OAAA9I,EAAA7F,EAAA0O,GAAAvJ,EAAAnF,EAAA,EAAjlBP,GCA/lP6J,EAAc,CACzBC,OAAQ,IACRG,KAAM,6CCLR,SAuBsBnB,EAAYuG,GAAA,OAAAC,EAAAzK,MAAArE,KAAAuE,UAAA,CVjBlC,SAAAuK,IUqDA,OVrDAA,EAAAlK,EAAApH,IAAAsF,MUiBO,SAAAiM,EACLnE,GAAgB,IAAAvC,EAAA2G,EAAArG,EAAAC,EAAAC,EAAAoG,EAAAC,EAAAC,EAAAC,EAAAnE,EAAAC,EAAAC,EAAAkE,EAAA9K,UAAA,OAAA/G,IAAAuB,MAAA,SAAAuQ,GAAA,cAAAA,EAAA/L,KAAA+L,EAAA1N,MAAA,KAAA,EAwBkD,OAdhE+G,OAAO,KAHHqG,GANN3G,8BAMI,GAAA,IAGFM,SAAU,iCAAgCqG,EAC1CpG,EAIEP,EAJFO,UAEAsG,OAAU,KADDD,EAGP5G,EAFF6G,aAAkBD,EAClBG,OAAI,KADcD,EAEhB9G,EADF+G,MAAO,OAAMD,EAGTlE,EAAM3G,EAAA,CACVuF,QAAOvF,EAAAA,EAAA,CAAA,GANPuE,EAGER,EAHFQ,WAOkB,CAAE,aAAcA,GAAc,CAAA,GAC1CqG,EAAa,CAAE,cAAe,QAAW,CAAA,IAE3CtG,EAAY,CAAE6C,OAAQC,YAAYC,QAAQ/C,IAAe,IAEzDsC,KAAG3C,OAAMI,EAAQiD,QAAQ,OAAQ,KAAGrD,OAAGqC,EAAQrC,UAAAA,OAAS6G,GAAIE,EAAA1N,KAAA,EAC3C6F,MAAMyD,EAAKD,GAAO,KAAA,EAA3B,KAARE,EAAQmE,EAAAjO,MAEDwK,GAAE,CAAAyD,EAAA1N,KAAA,EAAA,KAAA,CAAA,OAAA0N,EAAA9N,OAAA,SAAS2J,EAASa,QAAM,KAAA,EAAA,GAEnCb,EAAS7B,SAAWD,EAAYC,OAAM,CAAAgG,EAAA1N,KAAA,GAAA,KAAA,CAAA,OAAA0N,EAAA1N,KAAA,GACrBuJ,EAASa,OAAM,KAAA,GAAxB,MACAhL,MADAsO,EAAAjO,MACW,KAAA,GAAA,MAGbL,MAAMmK,EAAS5B,YAAW,KAAA,GAAA,IAAA,MAAA,OAAA+F,EAAA5L,OAAA,GAAAqL,EAAA,KACtCD,EAAAzK,MAAArE,KAAAuE,UAAA,CAAA,SVHsBgL,EAAkBC,GAAA,OAAAC,EAAApL,MAAArE,KAAAuE,UAAA,CC1DxC,SAAAkL,IDyGA,OCzGAA,EAAA7K,EAAApH,IAAAsF,MD0DO,SAAA4M,EACLC,GAAc,IAAAtH,EAAAM,EAAAC,EAAAC,EAAA+G,EAAAV,EAAAW,EAAAT,EAAAU,EAAAC,EAAAxL,UAAA,OAAA/G,IAAAuB,MAAA,SAAAiR,GAAA,cAAAA,EAAAzM,KAAAyM,EAAApO,MAAA,KAAA,EA2B0D,OAAhE+G,GA1BRN,8BAwBI,GAAA,IAEIM,QAASC,EAA4DP,EAA5DO,UAAWC,EAAiDR,EAAjDQ,UAAWqG,OAAU,KAAZU,EAAwCvH,EAAtC6G,aAAkBU,EAAER,OAAO,KAATS,EAAoBxH,EAAlB+G,MAAO,OAAMS,EAAAG,EAAApO,KAAA,EAErD0G,YAAYC,OAAWC,mBAAmBmH,IAAW,CACtEhH,QAAAA,EACAC,UAAAA,EACAC,UAAAA,EACAqG,WAAAA,EACAE,KAAAA,IACA,KAAA,SAGIU,EATIE,EAAA3O,KASW4O,MAAM,MAAM9L,OAAOuC,2BAGjCoJ,EAAQI,QAA8B,SAACC,EAAKC,GACjD,IAA4CC,EAAAC,EAAdF,EAAIH,MAAM,KAAI,GAE5C,OADAE,EADaE,EAAA,IACCvJ,OAAOwD,SADK+F,EAAA,GACiB,IACpCF,CACR,GAAE,KAAG,KAAA,EAAA,IAAA,MAAA,OAAAH,EAAAtM,OAAA,GAAAgM,EAAA,KACRD,EAAApL,MAAArE,KAAAuE,UAAA,CE3FA,SAAA0E,KDkDA,OClDAA,GAAArE,EAAApH,IAAAsF,MDiBO,SAAAyN,EACLC,GAAgB,IAAAnI,EAAAoI,EAAAC,EAAAf,EAAAgB,EAAAC,EAAArM,UAAA,OAAA/G,IAAAuB,MAAA,SAAA8R,GAAA,cAAAA,EAAAtN,KAAAsN,EAAAjP,MAAA,KAAA,EA4BY,OA3B5ByG,8BAoBI,GAAA,IAGEoI,EAAO,IAAIK,EAAM,QAAS,SAC3BlD,OAAO4C,GACNE,EAAOD,EAAKM,QAAQ,MAAO,CAAE7D,aAAa,IAC1CyC,EAASe,EAAKjN,MAAM,EAAG,GACvBkN,EAASD,EAAKjN,MAAM,GAAEoN,EAAAjP,KAAA,EAER2N,EAAmBI,EAAQtH,GAAQ,KAAA,EAA5C,OAAAwI,EAAArP,OAAA,SAAAqP,EAAAxP,KACEsP,IAAW,GAAC,KAAA,GAAA,IAAA,MAAA,OAAAE,EAAAnN,OAAA,GAAA6M,EAAA,KAC3BtH,GAAA5E,MAAArE,KAAAuE,UAAA,CErDA,SAAA4E,KDkHA,OClHAA,GAAAvE,EAAApH,IAAAsF,MDgEO,SAAAkO,EACL9E,GAAe,IAAA7D,EAAAwC,EAAAnC,EAAAuI,EAAA3E,EAAA3D,EAAAC,EAAAC,EAAAqI,EAAAC,EAAA5M,UAAA,OAAA/G,IAAAuB,MAAA,SAAAqS,GAAA,cAAAA,EAAA7N,KAAA6N,EAAAxP,MAAA,KAAA,EA+BuD,OAA9DiJ,GA9BRxC,8BA4BI,GAAA,IAEIwC,OAAQnC,EAA2DL,EAA3DK,OAAQ4D,OAAW,KAAb2E,EAAqD5I,EAAnDiE,WAAe2E,EAAEtI,EAAkCN,EAAlCM,QAASC,EAAyBP,EAAzBO,UAAWC,EAAcR,EAAdQ,UAASuI,EAAAxP,KAAA,EAErCuB,QAAQkO,IAAI,CAC3CpF,EAAgBC,EAAS,CACvBrB,OAAAA,EACAnC,OAAAA,EACA4D,SAAAA,EACA3D,QAAAA,EACAC,UAAAA,EACAC,UAAAA,IAGF,UAAUyI,KAAKpF,GACXK,EAAaL,EAAS,CAAErB,OAAAA,EAAQlC,QAAAA,EAASC,UAAAA,EAAWC,UAAAA,IACpD,OACJ,KAAA,EAbqB,OAarBqI,EAAAZ,EAAAc,EAAA/P,KAAA,GAbqB+P,EAAA5P,OAehB,SAAA,CAAE+P,SAfML,EAAA,GAeIM,OAfIN,EAAA,KAeI,KAAA,EAAA,IAAA,MAAA,OAAAE,EAAA1N,OAAA,GAAAsN,EAAA,KAC7B7H,GAAA9E,MAAArE,KAAAuE,UAAA,CC5EwC,SAAA6E,KAyBxC,OAzBwCA,GAAAxE,EAAApH,IAAAsF,MAAjC,SAAA2O,IAAA,IAAAC,EAAAnN,UAAA,OAAA/G,IAAAuB,MAAA,SAAA4S,GAAA,cAAAA,EAAApO,KAAAoO,EAAA/P,MAAA,KAAA,EAsBkC,MAAtB,uBAAsB+P,EAAAnQ,OAAA,SAEhC8G,EAFU,mDAFb,GAAA,KAIiE,KAAA,EAAA,IAAA,MAAA,OAAAqJ,EAAAjO,OAAA,GAAA+N,EAAA,KACvErI,GAAA/E,MAAArE,KAAAuE,UAAA,CO1EAyC","x_google_ignoreList":[12]}