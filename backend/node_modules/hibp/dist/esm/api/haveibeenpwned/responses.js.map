{"version":3,"file":"responses.js","sources":["../../../../src/api/haveibeenpwned/responses.ts"],"sourcesContent":["/**\n * Known potential responses from the remote API.\n *\n * Unfortunately, the API does not send a decent human-readable message back with each response, but\n * they are documented on the website: https://haveibeenpwned.com/api/v3#ResponseCodes\n *\n * These objects simply provide a mapping between the HTTP response status code and the\n * corresponding human-readable message so we can throw a more descriptive error for the consumer.\n * (They are also leveraged in our tests.)\n */\n\n/** @internal */\nexport const BAD_REQUEST = {\n  status: 400 as const,\n  statusText: 'Bad request â€” the account does not comply with an acceptable format.',\n};\n\n/**\n * The API includes a human-readable error message as text in the body of this\n * response type. Manually populating the message here purely for use in tests.\n *\n * @internal\n */\nexport const UNAUTHORIZED = {\n  status: 401 as const,\n  body: `Your request to the API couldn't be authorised. Check you have the right value in the \"hibp-api-key\" header, refer to the documentation for more: https://haveibeenpwned.com/API/v3#Authorisation`,\n};\n\n/** @internal */\nexport const FORBIDDEN = {\n  status: 403 as const,\n  statusText: 'Forbidden - access denied.',\n};\n\n/** @internal */\nexport const BLOCKED = {\n  headers: new Map([['cf-ray', 'someRayId']]),\n  status: 403 as const,\n};\n\n/** @internal */\nexport const NOT_FOUND = {\n  status: 404 as const,\n};\n\n/**\n * The API includes a JSON object containing a human-readable message in the\n * body of this response type. Manually populating the message here purely for\n * use in tests.\n *\n * @internal\n */\nexport const TOO_MANY_REQUESTS = {\n  headers: new Map([['retry-after', '2']]),\n  status: 429 as const,\n  body: {\n    statusCode: 429 as const,\n    message: 'Rate limit is exceeded. Try again in 2 seconds.',\n  },\n};\n"],"names":["BAD_REQUEST","status","statusText","UNAUTHORIZED","body","FORBIDDEN","BLOCKED","headers","Map","NOT_FOUND","TOO_MANY_REQUESTS","statusCode","message"],"mappings":"AAAA;;;;;;;;;AASG;AAEH;AACa,MAAAA,WAAW,GAAG;EACzBC,MAAM,EAAE,GAAY;EACpBC,UAAU,EAAE;;AAGd;;;;;AAKG;AACU,MAAAC,YAAY,GAAG;EAC1BF,MAAM,EAAE,GAAY;EACpBG,IAAI,EAAE;;AAGR;AACa,MAAAC,SAAS,GAAG;EACvBJ,MAAM,EAAE,GAAY;EACpBC,UAAU,EAAE;;AAGd;AACa,MAAAI,OAAO,GAAG;EACrBC,OAAO,eAAE,IAAIC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC,CAAC;EAC3CP,MAAM,EAAE;;AAGV;AACa,MAAAQ,SAAS,GAAG;EACvBR,MAAM,EAAE;;AAGV;;;;;;AAMG;AACU,MAAAS,iBAAiB,GAAG;EAC/BH,OAAO,eAAE,IAAIC,GAAG,CAAC,CAAC,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC,CAAC;EACxCP,MAAM,EAAE,GAAY;EACpBG,IAAI,EAAE;IACJO,UAAU,EAAE,GAAY;IACxBC,OAAO,EAAE;EACV;;"}